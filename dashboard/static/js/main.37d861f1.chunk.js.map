{"version":3,"sources":["components/layout/MainNavbar/NavbarSearch.js","components/layout/MainNavbar/NavbarNav/Notifications.js","components/layout/MainNavbar/NavbarNav/UserActions.js","components/layout/MainNavbar/NavbarNav/NavbarNav.js","flux/constants.js","flux/dispatcher.js","flux/store.js","data/sidebar-nav-items.js","components/layout/MainNavbar/NavbarToggle.js","components/layout/MainNavbar/MainNavbar.js","components/layout/MainSidebar/SidebarMainNavbar.js","components/layout/MainSidebar/SidebarSearch.js","components/layout/MainSidebar/SidebarNavItem.js","components/layout/MainSidebar/SidebarNavItems.js","components/layout/MainSidebar/MainSidebar.js","components/layout/MainFooter.js","components/common/MessageBar.js","layouts/Default.js","components/common/PageTitle.js","components/common/RangeDatePicker.js","components/export/ExportCreate.js","components/export/ExportTable.js","views/DataExport.js","components/usermanagement/UserOverview.js","views/UserManagement.js","components/usermanagement/User.js","views/AddUser.js","views/EditUser.js","components/map/Map.js","views/Map.js","components/visualize/GraphConfiguration.js","routes.js","views/Visualize.js","withTracker.js","serviceWorker.js","index.js","App.js","images/avatars/0.jpg"],"names":["NavbarSearch","react_default","a","createElement","shards_react_es","className","seamless","type","placeholder","Notifications","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","visible","toggleNotifications","bind","assertThisInitialized","setState","onClick","pill","theme","open","React","Component","UserActions","toggleUserActions","tag","Dropdown","caret","toggle","NavLink","src","require","alt","DropdownMenu","right","small","Link","to","divider","NavbarNav","navbar","Notifications_Notifications","UserActions_UserActions","constants","dispatcher","Dispatcher","_store","menuVisible","navItems","title","htmlBefore","moderatorOnly","adminOnly","stations","variables","stationAccess","variableAccess","user","initInProgress","initCompleted","aggregation","1H","1D","1M","store","Store","registerToActions","toggleSidebar","register","init","actionType","_ref","payload","Constants","checkInit","retrieveStations","emit","role","filter","item","groupRole","_this2","axios","get","then","response","data","_this3","length","access","unlimited","keys","specific","callback","on","removeListener","EventEmitter","NavbarToggle","handleClick","dispatch","href","MainNavbar","layout","stickyTop","classes","classNames","MainNavbar_NavbarToggle","defaultProps","SidebarMainNavbar","handleToggleSidebar","hideLogoText","style","lineHeight","SidebarSearch","display","minHeight","aria-label","SidebarNavItem","RouteNavLink","dangerouslySetInnerHTML","__html","htmlAfter","SidebarNavItems","getSidebarItems","onChange","addChangeListener","removeChangeListener","objectSpread","items","map","idx","MainSidebar_SidebarNavItem","key","aria-current","MainSidebar","sidebarNavItems","getMenuState","lg","size","md","MainSidebar_SidebarMainNavbar","MainSidebar_SidebarNavItems","MainFooter","contained","menuItems","copyright","fluid","MessageBar","updateDemo","demo","getUser","position","zIndex","DefaultLayout","children","noNavbar","noFooter","layout_MainSidebar_MainSidebar","offset","sm","layout_MainNavbar_MainNavbar","MessageBar_MessageBar","layout_MainFooter","PageTitle","subtitle","attrs","objectWithoutProperties","assign","xs","RangeDatePicker","startDate","undefined","endDate","minDate","maxDate","handleStartDateChange","handleEndDateChange","value","Date","dateFormat","selected","placeholderText","dropdownMode","ExportCreate","dateRangeReference","createRef","handleVariableChange","handleStationChange","startExport","change","submit","updateStations","updateVariables","updateAccess","show","ap","pr","rh","ra","te","wd","wg","ws","variableList","stationList","filterString","description","multiSelect","aggregations","getAggregations","aggregationAccess","e","variable","newState","stationCode","targetValue","location","name","toLowerCase","includes","code","station","event","errors","current","exportConfig","push","_i","_Object$keys","_loop","_Object$keys2","_i2","find","element","shortcode","alert","join","getFullYear","getMonth","slice","getDate","url","method","headers","Accept","Content-Type","status","window","reload","error","catch","err","accessStationCodes","getAccessStationCodes","getStations","indexOf","accessVariableCodes","getAccessVariableCodes","getVariables","getAccessAggregations","_","has","period","changeLimit","_this4","id","noGutters","common_PageTitle","common_RangeDatePicker","ref","target","aggregationKey","standard","checked","scope","handleMultiSelectChange","latitude","longitude","ExportTable","expandList","exportList","showNumber","expanded","refreshList","setInterval","initial","exports","dataExport","dist_default","date","createdAt","format","_id","colspan","DataExport","ExportTable_ExportTable","ExportCreate_ExportCreate","UserOverview","userList","demoList","filterUserType","users","width","isEmpty","userType","profile","company","email","lastLogin","UserManagement","UserOverview_UserOverview","handleAggregationChange","submitLabel","redirect","aggregationOptions","filterSelected","userId","organisation","notify","periodAccess","_i3","_Object$keys3","accessObject","trim","aggregationCode","zipObject","x","setDates","_this5","Redirect","AddUser","User_UserOverview","EditUser","match","params","L","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","iconUrl","shadowUrl","MapComponent","bounds","availableCountries","valueList","valueActive","uniq","countrycode","mapConfig","s","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","return","Map","height","maxZoom","TileLayer","attribution","Marker","Popup","concat","lightness","Math","min","toFixed","color","CircleMarker","center","fillColor","weight","fillOpacity","radius","MapView","Map_MapComponent","GraphConfiguration","changeVariable","hideGraph","hideVariables","graphTypeLabels","hourly-line","daily-line","hourly-bar","daily-bar","windrose","availableGraphTypesByVariable","default","showGraph","graphData","graphTitle","graphUnits","graphType","graphConfig","Array","isArray","v","serie","timestamps","y","values","mode","graphCode","react_plotly_default","showlegend","yaxis","text","barmode","config","displayModeBar","modeBarButtonsToRemove","displaylogo","routes","path","exact","component","GraphConfiguration_GraphConfiguration","GoogleAnalytics","initialize","process","REACT_APP_GAID","withTracker","WrappedComponent","arguments","_Component","HOC","apply","inherits","createClass","page","pathname","search","prevProps","currentPage","nextPage","Boolean","hostname","ReactDOM","render","BrowserRouter","basename","route","index","Route","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","__webpack_require__","p"],"mappings":"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","file":"static/js/main.37d861f1.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {\r\n  Form,\r\n  InputGroup,\r\n  InputGroupAddon,\r\n  InputGroupText,\r\n  FormInput\r\n} from \"shards-react\";\r\n\r\nexport default () => (\r\n  <Form className=\"main-navbar__search w-100 d-none d-md-flex d-lg-flex\">\r\n    <InputGroup seamless className=\"ml-3\">\r\n      <InputGroupAddon type=\"prepend\">\r\n        <InputGroupText>\r\n          <i className=\"material-icons\">search</i>\r\n        </InputGroupText>\r\n      </InputGroupAddon>\r\n      <FormInput\r\n        className=\"navbar-search\"\r\n        placeholder=\"Search for something...\"\r\n      />\r\n    </InputGroup>\r\n  </Form>\r\n);\r\n","import React from \"react\";\r\nimport { NavItem, NavLink, Badge, Collapse, DropdownItem } from \"shards-react\";\r\n\r\nexport default class Notifications extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      visible: false\r\n    };\r\n\r\n    this.toggleNotifications = this.toggleNotifications.bind(this);\r\n  }\r\n\r\n  toggleNotifications() {\r\n    this.setState({\r\n      visible: !this.state.visible\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <NavItem className=\"border-right dropdown notifications\">\r\n        <NavLink\r\n          className=\"nav-link-icon text-center\"\r\n          onClick={this.toggleNotifications}\r\n        >\r\n          <div className=\"nav-link-icon__wrapper\">\r\n            <i className=\"material-icons\">&#xE7F4;</i>\r\n            <Badge pill theme=\"danger\">\r\n              2\r\n            </Badge>\r\n          </div>\r\n        </NavLink>\r\n        <Collapse\r\n          open={this.state.visible}\r\n          className=\"dropdown-menu dropdown-menu-small\"\r\n        >\r\n          <DropdownItem>\r\n            <div className=\"notification__icon-wrapper\">\r\n              <div className=\"notification__icon\">\r\n                <i className=\"material-icons\">&#xE6E1;</i>\r\n              </div>\r\n            </div>\r\n            <div className=\"notification__content\">\r\n              <span className=\"notification__category\">Analytics</span>\r\n              <p>\r\n                Your website’s active users count increased by{\" \"}\r\n                <span className=\"text-success text-semibold\">28%</span> in the\r\n                last week. Great job!\r\n              </p>\r\n            </div>\r\n          </DropdownItem>\r\n          <DropdownItem>\r\n            <div className=\"notification__icon-wrapper\">\r\n              <div className=\"notification__icon\">\r\n                <i className=\"material-icons\">&#xE8D1;</i>\r\n              </div>\r\n            </div>\r\n            <div className=\"notification__content\">\r\n              <span className=\"notification__category\">Sales</span>\r\n              <p>\r\n                Last week your store’s sales count decreased by{\" \"}\r\n                <span className=\"text-danger text-semibold\">5.52%</span>. It\r\n                could have been worse!\r\n              </p>\r\n            </div>\r\n          </DropdownItem>\r\n          <DropdownItem className=\"notification__all text-center\">\r\n            View all Notifications\r\n          </DropdownItem>\r\n        </Collapse>\r\n      </NavItem>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Dropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  Collapse,\r\n  NavItem,\r\n  NavLink\r\n} from \"shards-react\";\r\n\r\nexport default class UserActions extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      visible: false\r\n    };\r\n\r\n    this.toggleUserActions = this.toggleUserActions.bind(this);\r\n  }\r\n\r\n  toggleUserActions() {\r\n    this.setState({\r\n      visible: !this.state.visible\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <NavItem tag={Dropdown} caret toggle={this.toggleUserActions}>\r\n        <DropdownToggle caret tag={NavLink} className=\"text-nowrap px-3\">\r\n          <img\r\n            className=\"user-avatar rounded-circle mr-2\"\r\n            src={require(\"./../../../../images/avatars/0.jpg\")}\r\n            alt=\"User Avatar\"\r\n          />{\" \"}\r\n          <span className=\"d-none d-md-inline-block\">Sierra Brooks</span>\r\n        </DropdownToggle>\r\n        <Collapse tag={DropdownMenu} right small open={this.state.visible}>\r\n          <DropdownItem tag={Link} to=\"profile\">\r\n            <i className=\"material-icons\">&#xE7FD;</i> Profile\r\n          </DropdownItem>\r\n          <DropdownItem divider />\r\n          <DropdownItem tag={Link} to=\"/logout\" className=\"text-danger\">\r\n            <i className=\"material-icons text-danger\">&#xE879;</i> Logout\r\n          </DropdownItem>\r\n        </Collapse>\r\n      </NavItem>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Nav } from \"shards-react\";\r\n\r\nimport Notifications from \"./Notifications\";\r\nimport UserActions from \"./UserActions\";\r\n\r\nexport default () => (\r\n  <Nav navbar className=\"border-left flex-row\">\r\n    <Notifications />\r\n    <UserActions />\r\n  </Nav>\r\n);\r\n","export default {\r\n  // Actions\r\n  CHANGE: \"CHANGE\",\r\n  TOGGLE_SIDEBAR: \"TOGGLE_SIDEBAR\",\r\n  GET_STATIONS: \"GET_STATIONS\",\r\n  CHECK_INIT: \"CHECK_INIT\",\r\n\r\n  // Events\r\n  EVENT_STATIONS_READY: \"EVENT_STATIONS_READY\",\r\n  EVENT_VARIABLES_READY: \"EVENT_VARIABLES_READY\",\r\n  EVENT_USER_READY: \"EVENT_USER_READY\"\r\n};\r\n","import { Dispatcher } from \"flux\";\r\n\r\nexport default new Dispatcher();\r\n","import { EventEmitter } from \"events\";\n\nimport Dispatcher from \"./dispatcher\";\nimport Constants from \"./constants\";\nimport getSidebarNavItems from \"../data/sidebar-nav-items\";\nimport axios from 'axios';\n\nlet _store = {\n  menuVisible: false,\n  navItems: getSidebarNavItems(),\n  stations: [],\n  variables: [],\n  stationAccess: [],\n  variableAccess: [],\n  user: {},\n  initInProgress: false,\n  initCompleted: false,\n  aggregation: {\n    \"1H\": \"Hourly\",\n    \"1D\": \"Daily\",\n    \"1M\": \"Monthly\"\n  }\n};\n\nclass Store extends EventEmitter {\n  constructor() {\n    super();\n\n    this.registerToActions = this.registerToActions.bind(this);\n    this.toggleSidebar = this.toggleSidebar.bind(this);\n\n    Dispatcher.register(this.registerToActions.bind(this));\n\n    // Run init to retrieve stations, variables and user.\n    this.init();\n  }\n\n  registerToActions({ actionType, payload }) {\n    switch (actionType) {\n      case Constants.TOGGLE_SIDEBAR:\n        this.toggleSidebar();\n        break;\n      case Constants.CHECK_INIT:\n        this.checkInit();\n        break;\n      case Constants.GET_STATIONS:\n        this.retrieveStations();\n        break;\n      default:\n    }\n  }\n\n  toggleSidebar() {\n    _store.menuVisible = !_store.menuVisible;\n    this.emit(Constants.CHANGE);\n  }\n\n  getMenuState() {\n    return _store.menuVisible;\n  }\n\n  getSidebarItems() {\n    let navItems = _store.navItems;\n    if (!_store.user.role || _store.user.role !== \"admin\") {\n      navItems = navItems.filter(item => !item.adminOnly);\n    }\n    if (!_store.user.groupRole || _store.user.groupRole !== \"moderator\") {\n      navItems = navItems.filter(item => !item.moderatorOnly);\n    }\n\n    return navItems;\n  }\n\n  checkInit() {\n    if (_store.initCompleted) {\n      this.emit(Constants.EVENT_STATIONS_READY);\n      this.emit(Constants.EVENT_VARIABLES_READY);\n      this.emit(Constants.EVENT_USER_READY);\n    } else if (!_store.initInProgress) {\n      this.init();\n    }\n  }\n\n  init() {\n    _store.initInProgress = true;\n    axios.get(\n      \"/init\"\n    )\n      .then(response => response.data)\n      .then(response => {\n        _store.stations = response.stations;\n        _store.stationAccess = response.stationAccess;\n        this.emit(Constants.EVENT_STATIONS_READY);\n\n        _store.variables = response.variables;\n        _store.variableAccess = response.variableAccess;\n        this.emit(Constants.EVENT_VARIABLES_READY);\n\n        _store.user = response.user;\n        this.emit(Constants.EVENT_USER_READY);\n        this.emit(Constants.CHANGE);\n\n        _store.initInProgress = false;\n        _store.initCompleted = true;\n      });\n  }\n\n  retrieveStations() {\n    if(_store.stations.length > 0) {\n      this.emit(Constants.EVENT_STATIONS_READY);\n    } else {\n      axios.get(\n        \"/services/assets/v2/stations?sort=code\"\n      )\n        .then(response => response.data)\n        .then(response => {\n          _store.stations = response.data;\n          this.emit(Constants.EVENT_STATIONS_READY);\n        });\n    }\n  }\n\n  getStations() {\n    return _store.stations;\n  }\n\n  getAccessStationCodes() {\n    return _store.stationAccess;\n  }\n\n  getVariables() {\n    return _store.variables;\n  }\n\n  getAccessVariableCodes() {\n    return _store.variableAccess;\n  }\n\n  getAggregations() {\n    return _store.aggregation;\n  }\n\n  getAccessAggregations() {\n    if(\"access\" in _store.user && \"aggregation\" in _store.user.access) {\n      return (_store.user.access.aggregation.unlimited === true) ? Object.keys(_store.aggregation) : _store.user.access.aggregation.specific;\n    } else {\n      return [];\n    }\n  }\n\n  getUser() {\n    return _store.user;\n  }\n\n  addChangeListener(callback) {\n    this.on(Constants.CHANGE, callback);\n  }\n\n  removeChangeListener(callback) {\n    this.removeListener(Constants.CHANGE, callback);\n  }\n}\n\nexport default new Store();\n","export default function() {\n  return [\n    // {\n    //   title: \"Dashboard\",\n    //   to: \"/dashboard\",\n    //   htmlBefore: '<i class=\"material-icons\">edit</i>',\n    //   htmlAfter: \"\"\n    // },\n    {\n      title: \"Map\",\n      htmlBefore: '<i class=\"material-icons\">vertical_split</i>',\n      to: \"/map\",\n    },\n    {\n      title: \"Graphs\",\n      htmlBefore: '<i class=\"material-icons\">insert_chart</i>',\n      to: \"/visualize\",\n    },\n    {\n      title: \"Data export\",\n      htmlBefore: '<i class=\"material-icons\">cloud_download</i>',\n      to: \"/export\",\n    },\n    // {\n    //   title: \"Access request\",\n    //   htmlBefore: '<i class=\"material-icons\">table_chart</i>',\n    //   to: \"/access-request\",\n    // },\n    {\n      title: \"User management\",\n      htmlBefore: '<i class=\"material-icons\">supervisor_account</i>',\n      to: \"/group-moderator\",\n      moderatorOnly: true\n    },\n    {\n      title: \"User management\",\n      htmlBefore: '<i class=\"material-icons\">account_box</i>',\n      to: \"/user-management\",\n      adminOnly: true\n    }\n  ];\n}\n","import React from \"react\";\r\n\r\nimport { Dispatcher, Constants } from \"../../../flux\";\r\n\r\nclass NavbarToggle extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.handleClick = this.handleClick.bind(this);\r\n  }\r\n\r\n  handleClick() {\r\n    Dispatcher.dispatch({\r\n      actionType: Constants.TOGGLE_SIDEBAR\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <nav className=\"nav\">\r\n        {/* eslint-disable-next-line jsx-a11y/anchor-is-valid */}\r\n        <a href=\"#\" onClick={this.handleClick} className=\"nav-link nav-link-icon toggle-sidebar d-sm-inline d-md-inline d-lg-none text-center\">\r\n          <i className=\"material-icons\">&#xE5D2;</i>\r\n        </a>\r\n      </nav>\r\n    )\r\n  }\r\n}\r\n\r\nexport default NavbarToggle;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classNames from \"classnames\";\r\nimport { Container, Navbar } from \"shards-react\";\r\n\r\nimport NavbarSearch from \"./NavbarSearch\";\r\nimport NavbarNav from \"./NavbarNav/NavbarNav\";\r\nimport NavbarToggle from \"./NavbarToggle\";\r\n\r\nconst MainNavbar = ({ layout, stickyTop }) => {\r\n  const classes = classNames(\r\n    \"main-navbar\",\r\n    \"bg-white\",\r\n    stickyTop && \"sticky-top\"\r\n  );\r\n\r\n  return (\r\n    <div className={classes}>\r\n      <Container className=\"p-0\">\r\n        <Navbar type=\"light\" className=\"align-items-stretch flex-md-nowrap p-0\">\r\n          <NavbarSearch />\r\n          <NavbarNav />\r\n          <NavbarToggle />\r\n        </Navbar>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nMainNavbar.propTypes = {\r\n  /**\r\n   * The layout type where the MainNavbar is used.\r\n   */\r\n  layout: PropTypes.string,\r\n  /**\r\n   * Whether the main navbar is sticky to the top, or not.\r\n   */\r\n  stickyTop: PropTypes.bool\r\n};\r\n\r\nMainNavbar.defaultProps = {\r\n  stickyTop: true\r\n};\r\n\r\nexport default MainNavbar;\r\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Navbar, NavbarBrand } from \"shards-react\";\n\nimport { Dispatcher, Constants } from \"../../../flux\";\n\nclass SidebarMainNavbar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleToggleSidebar = this.handleToggleSidebar.bind(this);\n  }\n\n  handleToggleSidebar() {\n    Dispatcher.dispatch({\n      actionType: Constants.TOGGLE_SIDEBAR\n    });\n  }\n\n  render() {\n    const { hideLogoText } = this.props;\n    return (\n      <div className=\"main-navbar\">\n        <Navbar\n          className=\"align-items-stretch bg-white flex-md-nowrap border-bottom p-0\"\n          type=\"light\"\n        >\n          <NavbarBrand\n            className=\"w-100 mr-0\"\n            href=\"#\"\n            style={{ lineHeight: \"25px\" }}\n          >\n            <div className=\"d-table m-auto\">\n              {/*<img*/}\n                {/*id=\"main-logo\"*/}\n                {/*className=\"d-inline-block align-top mr-1\"*/}\n                {/*style={{ maxWidth: \"25px\" }}*/}\n                {/*src={require(\"../../../images/shards-dashboards-logo.svg\")}*/}\n                {/*alt=\"Shards Dashboard\"*/}\n              {/*/>*/}\n              {!hideLogoText && (\n                <span className=\"d-none d-md-inline ml-1\">\n                  DGM data portal\n                </span>\n              )}\n            </div>\n          </NavbarBrand>\n          {/* eslint-disable-next-line */}\n          <a\n            className=\"toggle-sidebar d-sm-inline d-md-none d-lg-none\"\n            onClick={this.handleToggleSidebar}\n          >\n            <i className=\"material-icons\">&#xE5C4;</i>\n          </a>\n        </Navbar>\n      </div>\n    );\n  }\n}\n\nSidebarMainNavbar.propTypes = {\n  /**\n   * Whether to hide the logo text, or not.\n   */\n  hideLogoText: PropTypes.bool\n};\n\nSidebarMainNavbar.defaultProps = {\n  hideLogoText: false\n};\n\nexport default SidebarMainNavbar;\n","import React from \"react\";\r\nimport {\r\n  Form,\r\n  FormInput,\r\n  InputGroup,\r\n  InputGroupAddon,\r\n  InputGroupText\r\n} from \"shards-react\";\r\n\r\nexport default () => (\r\n  <Form className=\"main-sidebar__search w-100 border-right d-sm-flex d-md-none d-lg-none\" style={{ display: \"flex\", minHeight: \"45px\" }}>\r\n    <InputGroup seamless className=\"ml-3\">\r\n      <InputGroupAddon type=\"prepend\">\r\n        <InputGroupText>\r\n          <i className=\"material-icons\">search</i>\r\n        </InputGroupText>\r\n        <FormInput\r\n          className=\"navbar-search\"\r\n          placeholder=\"Search for something...\"\r\n          aria-label=\"Search\"\r\n        />\r\n      </InputGroupAddon>\r\n    </InputGroup>\r\n  </Form>\r\n);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { NavLink as RouteNavLink } from \"react-router-dom\";\r\nimport { NavItem, NavLink } from \"shards-react\";\r\n\r\nconst SidebarNavItem = ({ item }) => (\r\n  <NavItem>\r\n    <NavLink tag={RouteNavLink} to={item.to}>\r\n      {item.htmlBefore && (\r\n        <div\r\n          className=\"d-inline-block item-icon-wrapper\"\r\n          dangerouslySetInnerHTML={{ __html: item.htmlBefore }}\r\n        />\r\n      )}\r\n      {item.title && <span>{item.title}</span>}\r\n      {item.htmlAfter && (\r\n        <div\r\n          className=\"d-inline-block item-icon-wrapper\"\r\n          dangerouslySetInnerHTML={{ __html: item.htmlAfter }}\r\n        />\r\n      )}\r\n    </NavLink>\r\n  </NavItem>\r\n);\r\n\r\nSidebarNavItem.propTypes = {\r\n  /**\r\n   * The item object.\r\n   */\r\n  item: PropTypes.object\r\n};\r\n\r\nexport default SidebarNavItem;\r\n","import React from \"react\";\r\nimport { Nav } from \"shards-react\";\r\n\r\nimport SidebarNavItem from \"./SidebarNavItem\";\r\nimport { Store } from \"../../../flux\";\r\n\r\nclass SidebarNavItems extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      navItems: Store.getSidebarItems()\r\n    };\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n  }\r\n\r\n  componentWillMount() {\r\n    Store.addChangeListener(this.onChange);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    Store.removeChangeListener(this.onChange);\r\n  }\r\n\r\n  onChange() {\r\n    this.setState({\r\n      ...this.state,\r\n      navItems: Store.getSidebarItems()\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { navItems: items } = this.state;\r\n    return (\r\n      <div className=\"nav-wrapper\">\r\n        <Nav className=\"nav--no-borders flex-column\">\r\n          {items.map((item, idx) => (\r\n            <SidebarNavItem key={idx} item={item} />\r\n          ))}\r\n          <li className=\"nav-item\"><a className=\"nav-link\" aria-current=\"page\" href=\"/logout\">\r\n            <div className=\"d-inline-block item-icon-wrapper\"><i className=\"material-icons\">exit_to_app</i></div>\r\n            <span>Logout</span></a></li>\r\n        </Nav>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default SidebarNavItems;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classNames from \"classnames\";\r\nimport { Col } from \"shards-react\";\r\n\r\nimport SidebarMainNavbar from \"./SidebarMainNavbar\";\r\nimport SidebarSearch from \"./SidebarSearch\";\r\nimport SidebarNavItems from \"./SidebarNavItems\";\r\n\r\nimport { Store } from \"../../../flux\";\r\n\r\nclass MainSidebar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      menuVisible: false,\r\n      sidebarNavItems: Store.getSidebarItems()\r\n    };\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n  }\r\n\r\n  componentWillMount() {\r\n    Store.addChangeListener(this.onChange);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    Store.removeChangeListener(this.onChange);\r\n  }\r\n\r\n  onChange() {\r\n    this.setState({\r\n      ...this.state,\r\n      menuVisible: Store.getMenuState(),\r\n      sidebarNavItems: Store.getSidebarItems()\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const classes = classNames(\r\n      \"main-sidebar\",\r\n      \"px-0\",\r\n      \"col-12\",\r\n      this.state.menuVisible && \"open\"\r\n    );\r\n\r\n    return (\r\n      <Col\r\n        tag=\"aside\"\r\n        className={classes}\r\n        lg={{ size: 2 }}\r\n        md={{ size: 3 }}\r\n      >\r\n        <SidebarMainNavbar hideLogoText={this.props.hideLogoText} />\r\n        <SidebarSearch />\r\n        <SidebarNavItems />\r\n      </Col>\r\n    );\r\n  }\r\n}\r\n\r\nMainSidebar.propTypes = {\r\n  /**\r\n   * Whether to hide the logo text, or not.\r\n   */\r\n  hideLogoText: PropTypes.bool\r\n};\r\n\r\nMainSidebar.defaultProps = {\r\n  hideLogoText: false\r\n};\r\n\r\nexport default MainSidebar;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Container, Row, Nav, NavItem, NavLink } from \"shards-react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst MainFooter = ({ contained, menuItems, copyright }) => (\r\n  <footer className=\"main-footer d-flex p-2 px-3 bg-white border-top\">\r\n    <Container fluid={contained}>\r\n      <Row>\r\n        <Nav>\r\n          {menuItems.map((item, idx) => (\r\n            <NavItem key={idx}>\r\n              <NavLink tag={Link} to={item.to}>\r\n                {item.title}\r\n              </NavLink>\r\n            </NavItem>\r\n          ))}\r\n        </Nav>\r\n        <span className=\"copyright ml-auto my-auto mr-2\">{copyright}</span>\r\n      </Row>\r\n    </Container>\r\n  </footer>\r\n);\r\n\r\nMainFooter.propTypes = {\r\n  /**\r\n   * Whether the content is contained, or not.\r\n   */\r\n  contained: PropTypes.bool,\r\n  /**\r\n   * The menu items array.\r\n   */\r\n  menuItems: PropTypes.array,\r\n  /**\r\n   * The copyright info.\r\n   */\r\n  copyright: PropTypes.string\r\n};\r\n\r\nMainFooter.defaultProps = {\r\n  contained: false,\r\n  copyright: \"Copyright © 2018 DesignRevision\",\r\n  menuItems: [\r\n    {\r\n      title: \"Home\",\r\n      to: \"#\"\r\n    },\r\n    {\r\n      title: \"Services\",\r\n      to: \"#\"\r\n    },\r\n    {\r\n      title: \"About\",\r\n      to: \"#\"\r\n    },\r\n    {\r\n      title: \"Products\",\r\n      to: \"#\"\r\n    },\r\n    {\r\n      title: \"Blog\",\r\n      to: \"#\"\r\n    }\r\n  ]\r\n};\r\n\r\nexport default MainFooter;\r\n","import React from \"react\";\r\nimport {\r\n  Container, Alert,\r\n} from \"shards-react\";\r\nimport Store from \"../../flux/store\";\r\nimport Constants from \"../../flux/constants\";\r\n\r\nexport default class MessageBar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.updateDemo = this.updateDemo.bind(this);\r\n\r\n    this.state = {\r\n      demo: false\r\n    };\r\n  }\r\n\r\n  componentWillMount() {\r\n    Store.on(Constants.EVENT_USER_READY, this.updateDemo);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    Store.removeListener(Constants.EVENT_USER_READY, this.updateDemo);\r\n  }\r\n\r\n  updateDemo() {\r\n    const user = Store.getUser();\r\n    this.setState({ 'demo': user.demo });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {(this.state.demo === true) &&\r\n        <Container fluid className=\"px-0 alert-message\" style={{position:'relative', 'zIndex': 999}}>\r\n          <Alert className=\"mb-0\">\r\n            <i className=\"fa fa-info mx-2\"></i> Your account hasn't been configured yet, therefore you only have access to demo stations and limited datasets.\r\n          </Alert>\r\n        </Container>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {Container, Row, Col} from \"shards-react\";\r\n\r\nimport MainNavbar from \"../components/layout/MainNavbar/MainNavbar\";\r\nimport MainSidebar from \"../components/layout/MainSidebar/MainSidebar\";\r\nimport MainFooter from \"../components/layout/MainFooter\";\r\nimport MessageBar from \"../components/common/MessageBar\";\r\n\r\nconst DefaultLayout = ({ children, noNavbar, noFooter }) => (\r\n  <Container fluid>\r\n    <Row>\r\n      <MainSidebar />\r\n      <Col\r\n        className=\"main-content p-0\"\r\n        lg={{ size: 10, offset: 2 }}\r\n        md={{ size: 9, offset: 3 }}\r\n        sm=\"12\"\r\n        tag=\"main\"\r\n      >\r\n        {!noNavbar && <MainNavbar />}\r\n        <MessageBar/>\r\n        {children}\r\n        {!noFooter && <MainFooter />}\r\n      </Col>\r\n    </Row>\r\n  </Container>\r\n);\r\n\r\nDefaultLayout.propTypes = {\r\n  /**\r\n   * Whether to display the navbar, or not.\r\n   */\r\n  noNavbar: PropTypes.bool,\r\n  /**\r\n   * Whether to display the footer, or not.\r\n   */\r\n  noFooter: PropTypes.bool\r\n};\r\n\r\nDefaultLayout.defaultProps = {\r\n  noNavbar: true,\r\n  noFooter: true\r\n};\r\n\r\nexport default DefaultLayout;\r\n","import React from \"react\";\r\nimport classNames from \"classnames\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Col } from \"shards-react\";\r\n\r\nconst PageTitle = ({ title, subtitle, className, ...attrs }) => {\r\n  const classes = classNames(\r\n    className,\r\n    \"text-center\",\r\n    \"text-md-left\",\r\n    \"mb-sm-0\"\r\n  );\r\n\r\n  return (\r\n    <Col xs=\"12\" sm=\"4\" className={classes} { ...attrs }>\r\n      <span className=\"text-uppercase page-subtitle\">{subtitle}</span>\r\n      <h3 className=\"page-title\">{title}</h3>\r\n    </Col>\r\n  )\r\n};\r\n\r\nPageTitle.propTypes = {\r\n  /**\r\n   * The page title.\r\n   */\r\n  title: PropTypes.string,\r\n  /**\r\n   * The page subtitle.\r\n   */\r\n  subtitle: PropTypes.string\r\n};\r\n\r\nexport default PageTitle;\r\n","import React from \"react\";\r\nimport classNames from \"classnames\";\r\nimport {\r\n  InputGroup,\r\n  DatePicker,\r\n  InputGroupAddon,\r\n  InputGroupText\r\n} from \"shards-react\";\r\n\r\nimport \"../../assets/range-date-picker.css\";\r\n\r\nclass RangeDatePicker extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      startDate: undefined,\r\n      endDate: undefined,\r\n      minDate: (props.minDate) ? props.minDate : undefined,\r\n      maxDate: (props.maxDate) ? props.maxDate : undefined\r\n    };\r\n\r\n    this.handleStartDateChange = this.handleStartDateChange.bind(this);\r\n    this.handleEndDateChange = this.handleEndDateChange.bind(this);\r\n  }\r\n\r\n  changeLimit(minDate, maxDate) {\r\n    this.setState({ minDate: minDate, maxDate: maxDate });\r\n  }\r\n\r\n  setDates(startDate, endDate) {\r\n    this.handleStartDateChange(startDate);\r\n    this.handleEndDateChange(endDate);\r\n  }\r\n\r\n  handleStartDateChange(value) {\r\n    this.setState({\r\n      ...this.state,\r\n      ...{ startDate: new Date(value) }\r\n    });\r\n  }\r\n\r\n  handleEndDateChange(value) {\r\n    this.setState({\r\n      ...this.state,\r\n      ...{ endDate: new Date(value) }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { className } = this.props;\r\n    const classes = classNames(className, \"d-flex\", \"my-auto\", \"date-range\");\r\n\r\n    return (\r\n      <InputGroup className={classes}>\r\n        <DatePicker\r\n          size=\"sm\"\r\n          dateFormat=\"yyyy-MM-dd\"\r\n          selected={this.state.startDate}\r\n          onChange={this.handleStartDateChange}\r\n          minDate={this.state.minDate}\r\n          maxDate={this.state.maxDate}\r\n          placeholderText=\"Start Date\"\r\n          dropdownMode=\"select\"\r\n          className=\"text-center\"\r\n        />\r\n        <DatePicker\r\n          size=\"sm\"\r\n          dateFormat=\"yyyy-MM-dd\"\r\n          selected={this.state.endDate}\r\n          onChange={this.handleEndDateChange}\r\n          minDate={this.state.minDate}\r\n          maxDate={this.state.maxDate}\r\n          placeholderText=\"End Date\"\r\n          dropdownMode=\"select\"\r\n          className=\"text-center\"\r\n        />\r\n        <InputGroupAddon type=\"append\">\r\n          <InputGroupText>\r\n            <i className=\"material-icons\">&#xE916;</i>\r\n          </InputGroupText>\r\n        </InputGroupAddon>\r\n      </InputGroup>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RangeDatePicker;\r\n","import React from \"react\";\nimport _ from \"lodash\";\nimport {\n  Container,\n  Row,\n  Col,\n  Card,\n  CardHeader,\n  CardBody,\n  Button,\n  InputGroup,\n  InputGroupAddon,\n  InputGroupText, FormSelect, FormCheckbox, FormGroup, FormInput, Form\n} from \"shards-react\";\n\nimport axios from 'axios';\nimport { Store, Dispatcher, Constants } from \"../../flux\";\nimport PageTitle from \"../common/PageTitle\";\nimport RangeDatePicker from \"../common/RangeDatePicker\";\n\nexport default class ExportCreate extends React.Component {\n  constructor(props) {\n    super(props);\n    this.dateRangeReference = React.createRef();\n\n    this.handleVariableChange = this.handleVariableChange.bind(this);\n    this.handleStationChange = this.handleStationChange.bind(this);\n    this.startExport = this.startExport.bind(this);\n    this.change = this.change.bind(this);\n    this.submit = this.submit.bind(this);\n\n    this.updateStations = this.updateStations.bind(this);\n    this.updateVariables = this.updateVariables.bind(this);\n    this.updateAccess = this.updateAccess.bind(this);\n\n    this.state = {\n      show: false,\n      startDate: '',\n      endDate: '',\n      aggregation: null,\n      variables: { 'ap': true, 'pr': true, 'rh': true, 'ra': true, 'te': true, 'wd': true, 'wg': true, 'ws': true },\n      variableList: [],\n      stations: {},\n      stationList: [],\n      filterString: '',\n      description: '',\n      multiSelect: false,\n      aggregations: Store.getAggregations(),\n      aggregationAccess: [],\n      minDate: new Date('2015-01-01'),\n      maxDate: new Date()\n    };\n  }\n\n  handleVariableChange(e, variable) {\n    const newState = { 'variables': this.state.variables };\n    newState['variables'][variable] = !this.state['variables'][variable];\n    this.setState({ ...this.state, ...newState });\n  }\n\n  handleStationChange(e, stationCode) {\n    const newState = { 'stations': this.state.stations };\n    newState['stations'][stationCode] = !this.state['stations'][stationCode];\n    this.setState({ ...this.state, ...newState });\n  }\n\n  handleMultiSelectChange() {\n    let targetValue = (this.state.multiSelect) ? false : true;\n    let stations = this.state.stations;\n\n    this.state.stationList.filter(e => ((e.location.name.toLowerCase().includes(this.state.filterString) || e.code.toLowerCase().includes(this.state.filterString)))).map((station) => {\n      stations[station.code] = targetValue;\n    });\n\n    const newState = { multiSelect: targetValue, stations: stations };\n    this.setState({ ...this.state, ...newState });\n  }\n\n  change(key, value) {\n    const newState = {};\n    newState[key] = value;\n    if(key == 'filterString') {\n      newState['multiSelect'] = false;\n    }\n    this.setState({ ...this.state, ...newState });\n  }\n\n  startExport(event) {\n    const newState = { 'show': true };\n    this.setState({ ...this.state, ...newState });\n  }\n\n  submit() {\n    let errors = [];\n    const dateRangeReference = this.dateRangeReference.current;\n\n    let exportConfig = {\n      'aggregation': this.state.aggregation,\n      'variables': [],\n      'stations': [],\n      'startDate': null,\n      'endDate': null\n    };\n\n    // Validation.\n    // Check date range.\n    if (!dateRangeReference.state.startDate || !dateRangeReference.state.startDate instanceof Date) {\n      errors.push('Invalid start date');\n    }\n    if (!dateRangeReference.state.endDate || !dateRangeReference.state.endDate instanceof Date) {\n      errors.push('Invalid end date');\n    }\n\n    for (const station of Object.keys(this.state.stations)) {\n      if (this.state.stations[station]) {\n        exportConfig.stations.push(station);\n      }\n    }\n    for (const variable of Object.keys(this.state.variables)) {\n      if (this.state.variables[variable] && this.state.variableList.find(element => element.shortcode === variable)) {\n        exportConfig.variables.push(variable);\n      }\n    }\n\n    if (exportConfig.stations.length == 0) {\n      errors.push('There are no stations selected.');\n    }\n\n    if (exportConfig.variables.length == 0) {\n      errors.push('There are no variables selected.');\n    }\n\n    if (errors.length > 0) {\n      alert('Data export failed:\\n' + errors.join('\\n'));\n      return false;\n    } else {\n      exportConfig.startDate = dateRangeReference.state.startDate.getFullYear() + \"-\" + (\"0\"+(dateRangeReference.state.startDate.getMonth()+1)).slice(-2) + \"-\" + (\"0\" + dateRangeReference.state.startDate.getDate()).slice(-2) + 'T00:00:00.000Z';\n      exportConfig.endDate = dateRangeReference.state.endDate.getFullYear() + \"-\" + (\"0\"+(dateRangeReference.state.endDate.getMonth()+1)).slice(-2) + \"-\" + (\"0\" + dateRangeReference.state.endDate.getDate()).slice(-2) + 'T23:59:59.000Z';\n      exportConfig.description = this.state.description;\n\n      axios(\n        {\n          url: \"/export\",\n          method: \"POST\",\n          headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n          },\n          data: exportConfig\n        }\n      )\n        .then(response => response.data)\n        .then(response => {\n          if (response.status === \"success\") {\n            window.location.reload();\n          } else {\n            alert('Data export failed:\\n' + response.error);\n          }\n        })\n        .catch(function(err) {\n          alert('Data export failed.');\n        });\n    }\n  }\n\n  updateStations() {\n    const accessStationCodes = Store.getAccessStationCodes();\n    const stationList = Store.getStations().filter(function(station){ return accessStationCodes.indexOf(station.code) !== -1; });\n    this.setState({ 'stationList': stationList });\n  }\n\n  updateVariables() {\n    const accessVariableCodes = Store.getAccessVariableCodes();\n    const variableList = Store.getVariables().filter(function(variable){ return accessVariableCodes.indexOf(variable.shortcode) !== -1; });\n    this.setState({ 'variableList': variableList });\n  }\n\n  updateAccess() {\n    const aggregationAccess = Store.getAccessAggregations();\n    if(this.state.aggregation === null && aggregationAccess.length > 0) {\n      this.setState({ 'aggregation': aggregationAccess[0] });\n    }\n    const user = Store.getUser();\n    if(_.has(user, 'access.period.unlimited') && user.access.period.unlimited !== true) {\n      this.setState({ 'minDate': new Date(user.access.period.startDate), 'maxDate': (new Date() > new Date(user.access.period.endDate)) ? new Date(user.access.period.endDate) : new Date() });\n      if (this.dateRangeReference.current) {\n        this.dateRangeReference.current.changeLimit(this.state.minDate, this.state.maxDate);\n      }\n    }\n    this.setState({ 'aggregationAccess': aggregationAccess });\n  }\n\n  componentWillMount() {\n    Store.on(Constants.EVENT_STATIONS_READY, this.updateStations);\n    Store.on(Constants.EVENT_VARIABLES_READY, this.updateVariables);\n    Store.on(Constants.EVENT_USER_READY, this.updateAccess);\n  }\n\n  componentWillUnmount() {\n    Store.removeListener(Constants.EVENT_STATIONS_READY, this.updateStations);\n    Store.removeListener(Constants.EVENT_VARIABLES_READY, this.updateVariables);\n    Store.removeListener(Constants.EVENT_USER_READY, this.updateAccess);\n  }\n\n  componentDidMount() {\n    Dispatcher.dispatch({\n      actionType: Constants.CHECK_INIT\n    });\n  }\n\n  render() {\n    return (\n      <div id=\"export-create\">\n        <Row noGutters className=\"page-header py-4\">\n          <PageTitle sm=\"4\" title=\"Create export\" subtitle=\"\" className=\"text-sm-left\" />\n        </Row>\n        {!this.state.show &&\n        <Row>\n          <Col>\n            <p onClick={this.startExport}><a href=\"#export-create\">Click here</a> to start a new export.</p>\n          </Col>\n        </Row>\n        }\n        {this.state.show &&\n        <div>\n        <Row>\n          <Col>\n            <Card small className=\"mb-4\">\n              <CardHeader className=\"border-bottom\">\n                <h6 className=\"m-0\">Export settings</h6>\n              </CardHeader>\n              <CardBody className=\"pt-0\">\n                <Row className=\"border-bottom\">\n                  <Col sm=\"3\" className=\"d-flex mb-3 mt-3\">\n                    Period\n                  </Col>\n                  <Col sm=\"3\" className=\"d-flex mb-2 mt-2\">\n                    <RangeDatePicker ref={this.dateRangeReference} minDate={this.state.minDate} maxDate={this.state.maxDate} />\n                  </Col>\n                </Row>\n                <Row className=\"border-bottom\">\n                  <Col sm=\"3\" className=\"d-flex mb-2 mt-3\">\n                    Data type\n                  </Col>\n                  <Col sm=\"3\" className=\"d-flex mb-2 mt-2\">\n                    <InputGroup>\n                      <InputGroupAddon type=\"prepend\">\n                        <InputGroupText>Aggregation</InputGroupText>\n                      </InputGroupAddon>\n                      <FormSelect onChange={e => this.change(\"aggregation\", e.target.value)}>\n                        {this.state.aggregationAccess.map((aggregationKey) => {\n                          return (\n                            <option value={aggregationKey}>{this.state.aggregations[aggregationKey]}</option>\n                          )\n                        })}\n                      </FormSelect>\n                    </InputGroup>\n                  </Col>\n                </Row>\n                <Row className=\"border-bottom\">\n                  <Col sm=\"3\" className=\"d-flex mb-3 mt-3\">\n                    Variables\n                  </Col>\n                  <Col sm=\"4\" md=\"3\" className=\"mb-2 mt-2\">\n                    <strong className=\"text-muted d-block mb-2\">Standard variables</strong>\n                    <fieldset>\n                      {this.state.variableList.filter(variable => variable.standard === true).map((variable) => {\n                        return (\n                          <FormCheckbox checked={this.state.variables[variable.shortcode]} onChange={e => this.handleVariableChange(e, variable.shortcode)}>{variable.description}</FormCheckbox>\n                        )\n                      })}\n                    </fieldset>\n                  </Col>\n                  {this.state.variableList.filter(variable => variable.standard === false).length > 0 &&\n                  <Col sm=\"4\" md=\"3\" className=\"mb-2 mt-2\">\n                    <strong className=\"text-muted d-block mb-2\">Other variables</strong>\n                    <fieldset>\n                      {this.state.variableList.filter(variable => variable.standard === false).map((variable) => {\n                        return (\n                          <FormCheckbox checked={this.state.variables[variable.shortcode]}\n                                        onChange={e => this.handleVariableChange(e, variable.shortcode)}>{variable.description}</FormCheckbox>\n                        )\n                      })}\n                    </fieldset>\n                  </Col>\n                  }\n                </Row>\n                <Row>\n                  <Col sm=\"3\" className=\"d-flex mb-3 mt-3\">\n                    Description (optional)\n                  </Col>\n                  <Col sm=\"3\" className=\"d-flex mb-2 mt-2\">\n                    <FormInput\n                      placeholder=\"\"\n                      onChange={e => this.change(\"description\", e.target.value)}\n                    />\n                  </Col>\n                </Row>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <Card small className=\"mb-2\">\n              <CardHeader className=\"border-bottom\">\n                <h6 className=\"m-0\">Stations</h6>\n              </CardHeader>\n              <CardBody className=\"p-0 pb-3\">\n                <Row className=\"border-bottom\">\n                  <Col sm=\"3\" className=\"d-flex mb-2 mt-3 ml-3\">\n                    <InputGroup className=\"mb-3\">\n                      <InputGroupAddon type=\"prepend\">\n                        <InputGroupText>Filter</InputGroupText>\n                      </InputGroupAddon>\n                      <FormInput onChange={e => this.change(\"filterString\", e.target.value.toLowerCase())} placeholder=\"e.g. station id or station name\" />\n                    </InputGroup>\n                  </Col>\n                </Row>\n                <table className=\"table mb-0\">\n                  <thead className=\"bg-light\">\n                  <tr>\n                    <th scope=\"col\" className=\"border-0\">\n                      <FormCheckbox className=\"mb-0\" checked={this.state.multiSelect} onChange={e => this.handleMultiSelectChange(e)}/>\n                    </th>\n                    <th scope=\"col\" className=\"border-0\">\n                      Station id\n                    </th>\n                    <th scope=\"col\" className=\"border-0\">\n                      Location name\n                    </th>\n                    <th scope=\"col\" className=\"border-0\">\n                      Latitude\n                    </th>\n                    <th scope=\"col\" className=\"border-0\">\n                      Longitude\n                    </th>\n                  </tr>\n                  </thead>\n                  <tbody>\n                  {this.state.stationList.filter(e => ((e.location.name.toLowerCase().includes(this.state.filterString) || e.code.toLowerCase().includes(this.state.filterString)))).map((station) => {\n                    return (\n                    <tr>\n                      <td><FormCheckbox className=\"mb-0\" checked={this.state.stations[station.code]} onChange={e => this.handleStationChange(e, station.code)}/></td>\n                      <td>{station.code}</td>\n                      <td>{station.location.name}</td>\n                      <td>{station.location.latitude}</td>\n                      <td>{station.location.longitude}</td>\n                    </tr>\n                    )\n                  })}\n                  </tbody>\n                </table>\n              </CardBody>\n            </Card>\n            <Button theme=\"primary\" onClick={this.submit} className=\"mb-4 mr-1\">\n              Create export\n            </Button>\n          </Col>\n        </Row>\n        </div>\n        }\n      </div>\n    );\n  }\n}\n","import React from \"react\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n} from \"shards-react\";\r\n\r\nimport axios from 'axios';\r\nimport Moment from 'react-moment';\r\nimport PageTitle from \"../common/PageTitle\";\r\nimport Store from \"../../flux/store\";\r\n\r\nexport default class ExportTable extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.expandList = this.expandList.bind(this);\r\n\r\n    this.state = {\r\n      exportList: [],\r\n      showNumber: 5,\r\n      aggregations: Store.getAggregations(),\r\n      expanded: false\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.refreshList(true);\r\n    setInterval(this.refreshList.bind(this), 10000);\r\n  }\r\n\r\n  refreshList(initial) {\r\n    if (initial || this.state.exportList.filter(item => item.status !== \"completed\").length > 0) {\r\n      axios.get(\r\n        \"/export\"\r\n      )\r\n        .then(response => response.data)\r\n        .then(response =>\r\n          this.setState({\r\n            exportList: response.exports\r\n          })\r\n        );\r\n    }\r\n  }\r\n\r\n  expandList(event) {\r\n    const newState = { 'expanded': true, showNumber: 100 };\r\n    this.setState({ ...this.state, ...newState });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"export-history\">\r\n        {/* Page Header */}\r\n        <Row noGutters className=\"page-header py-4\">\r\n          <PageTitle sm=\"4\" title=\"Data export\" subtitle=\"\" className=\"text-sm-left\" />\r\n        </Row>\r\n\r\n        {/* Default Light Table */}\r\n        <Row>\r\n          <Col>\r\n            <Card small className=\"mb-4\">\r\n              <CardHeader className=\"border-bottom\">\r\n                <h6 className=\"m-0\">\r\n                  Export history\r\n                  {(this.state.exportList.length > this.state.showNumber) &&\r\n                    <span>\r\n                    &nbsp;-&nbsp;<a href=\"#export-history\" onClick={this.expandList}>(show all {this.state.exportList.length})</a>\r\n                    </span>\r\n                  }\r\n                </h6>\r\n              </CardHeader>\r\n              <CardBody className=\"p-0 pb-3\">\r\n                <table className=\"table mb-0\">\r\n                  <thead className=\"bg-light\">\r\n                  {(this.state.exportList.length > 0) &&\r\n                  <tr>\r\n                    <th scope=\"col\" className=\"border-0\">\r\n                      Created at\r\n                    </th>\r\n                    <th scope=\"col\" className=\"border-0\">\r\n                      Description\r\n                    </th>\r\n                    <th scope=\"col\" className=\"border-0\">\r\n                      Aggregation\r\n                    </th>\r\n                    <th scope=\"col\" className=\"border-0\">\r\n                      Variables\r\n                    </th>\r\n                    <th scope=\"col\" className=\"border-0\">\r\n                      Stations\r\n                    </th>\r\n                    <th scope=\"col\" className=\"border-0\">\r\n                      Status\r\n                    </th>\r\n                  </tr>\r\n                  }\r\n                  </thead>\r\n                  <tbody>\r\n                  {this.state.exportList.slice(0,this.state.showNumber).map((dataExport) => {\r\n                    return (\r\n                      <tr>\r\n                        <td><Moment date={dataExport.createdAt} format=\"YYYY-MM-DD HH:mm\" /></td>\r\n                        <td>{dataExport.description}</td>\r\n                        <td>{this.state.aggregations[dataExport.aggregation]}</td>\r\n                        <td>\r\n                        {dataExport.variables.length <= 3 &&\r\n                        <span>{dataExport.variables.join(\", \")}</span>\r\n                        }\r\n                        {dataExport.variables.length > 3 &&\r\n                        <span>{dataExport.variables.length} variables</span>\r\n                        }\r\n                        </td>\r\n                        <td>\r\n                        {dataExport.stations.length <= 3 &&\r\n                        <span>{dataExport.stations.join(\", \")}</span>\r\n                        }\r\n                        {dataExport.stations.length > 3 &&\r\n                        <span>{dataExport.stations.length} stations</span>\r\n                        }\r\n                        </td>\r\n                        {dataExport.status === \"completed\" &&\r\n                        <td><a href={\"/download/export/\" + dataExport._id}>Download</a></td>\r\n                        }\r\n                        {dataExport.status !== \"completed\" &&\r\n                        <td>{dataExport.status}</td>\r\n                        }\r\n                      </tr>\r\n                    )\r\n                  })}\r\n                  {(this.state.exportList.length === 0) &&\r\n                    <tr>\r\n                      <td colspan=\"5\">You haven't generated any data exports yet.</td>\r\n                    </tr>\r\n                  }\r\n                  </tbody>\r\n                </table>\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  Container,\r\n} from \"shards-react\";\r\n\r\nimport ExportCreate from \"../components/export/ExportCreate\";\r\nimport ExportTable from \"../components/export/ExportTable\";\r\n\r\nconst DataExport = () => (\r\n  <Container fluid className=\"main-content-container px-4\">\r\n    <ExportTable/>\r\n    <ExportCreate/>\r\n  </Container>\r\n);\r\n\r\nexport default DataExport;\r\n","import React from \"react\";\nimport {\n  Row,\n  Col,\n  Card,\n  CardHeader,\n  CardBody, Button, InputGroup, InputGroupAddon, InputGroupText, FormInput, FormSelect,\n} from \"shards-react\";\n\nimport axios from 'axios';\nimport PageTitle from \"../common/PageTitle\";\nimport Moment from \"react-moment\";\nimport Link from \"react-router-dom/es/Link\";\nimport _ from \"lodash\";\n\nexport default class UserOverview extends React.Component {\n  constructor(props) {\n    super(props);\n    this.change = this.change.bind(this);\n\n    this.state = {\n      userList: [],\n      demoList: [],\n      filterUserType: \"\"\n    };\n  }\n\n  change(key, value) {\n    const newState = {};\n    newState[key] = value;\n    this.setState({ ...this.state, ...newState });\n  }\n\n  componentDidMount() {\n    axios.get(\n      \"/users\"\n    )\n      .then(response => response.data)\n      .then(response =>\n        this.setState({\n          userList: response.users.filter(user => user.access),\n          demoList: response.users.filter(user => !user.access)\n        })\n      );\n  }\n\n  render() {\n    return (\n      <div id=\"user-overview\">\n        {/* Page Header */}\n        <Row noGutters className=\"page-header py-4\">\n          <PageTitle sm=\"4\" title=\"User overview\" subtitle=\"\" className=\"text-sm-left\" />\n        </Row>\n        <Link to=\"/add-user\">\n          <Button theme=\"primary\" className=\"mb-4 mr-1\">\n            Create user\n          </Button>\n        </Link>\n\n        {/* Default Light Table */}\n        <Row>\n        <Col>\n          <Card small className=\"mb-4\">\n            <CardHeader className=\"border-bottom\">\n              <h6 className=\"m-0\">\n                User list ({this.state.userList.length})\n              </h6>\n            </CardHeader>\n            <CardBody className=\"p-0 pb-3\">\n              <table className=\"table mb-0\">\n                <thead className=\"bg-light\">\n                <tr>\n                  <th scope=\"col\" className=\"border-0\">\n                    Name\n                  </th>\n                  <th scope=\"col\" className=\"border-0\" style={{\"width\": \"30%\"}}>\n                    Organisation\n                  </th>\n                  <th scope=\"col\" className=\"border-0\">\n                    E-mail\n                  </th>\n                  <th scope=\"col\" className=\"border-0\">\n                    Created\n                  </th>\n                  <th scope=\"col\" className=\"border-0\">\n                    Last active\n                  </th>\n                  <th scope=\"col\" className=\"border-0\">\n                    Action\n                  </th>\n                </tr>\n                </thead>\n                <tbody>\n                {this.state.userList.filter(e => (_.isEmpty(this.state.filterUserType) || e.userType === this.state.filterUserType)).map((user) => {\n                  return (\n                    <tr>\n                      <td>\n                        {user.profile.name}\n                        {(user.role === \"admin\") &&\n                        <span>&nbsp;<i className=\"material-icons\">grade</i></span>\n                        }\n                      </td>\n                      <td>{user.profile.company}</td>\n                      <td>{user.email}</td>\n                      <td>\n                        {(user.createdAt) &&\n                        <Moment date={user.createdAt} format=\"YYYY-MM-DD\"/>\n                        }\n                      </td>\n                      <td>\n                        {(user.lastLogin) &&\n                        <Moment date={user.lastLogin} format=\"YYYY-MM-DD\"/>\n                        }\n                      </td>\n                      <td><Link to={\"/edit-user/\" + user._id}>Edit</Link></td>\n                    </tr>\n                  )\n                })}\n                </tbody>\n              </table>\n            </CardBody>\n          </Card>\n        </Col>\n      </Row>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\r\nimport {\r\n  Container,\r\n} from \"shards-react\";\r\nimport UserOverview from \"../components/usermanagement/UserOverview\";\r\n\r\n\r\nconst UserManagement = () => (\r\n  <Container fluid className=\"main-content-container px-4\">\r\n    <UserOverview/>\r\n  </Container>\r\n);\r\n\r\nexport default UserManagement;\r\n","import React from \"react\";\nimport {\n  Button,\n  Card, CardBody, CardHeader,\n  Col, FormCheckbox, FormInput, FormSelect, InputGroup, InputGroupAddon, InputGroupText,\n  Row,\n} from \"shards-react\";\n\nimport axios from 'axios';\nimport PageTitle from \"../common/PageTitle\";\nimport RangeDatePicker from \"../common/RangeDatePicker\";\nimport _ from \"lodash\";\nimport Store from \"../../flux/store\";\nimport Constants from \"../../flux/constants\";\nimport Dispatcher from \"../../flux/dispatcher\";\nimport Redirect from \"react-router-dom/es/Redirect\";\n\nexport default class UserOverview extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.dateRangeReference = React.createRef();\n\n    this.handleVariableChange = this.handleVariableChange.bind(this);\n    this.handleStationChange = this.handleStationChange.bind(this);\n    this.handleAggregationChange = this.handleAggregationChange.bind(this);\n\n    this.change = this.change.bind(this);\n    this.submit = this.submit.bind(this);\n\n    this.updateStations = this.updateStations.bind(this);\n    this.updateVariables = this.updateVariables.bind(this);\n\n    this.state = {\n      submitLabel: \"Create user\",\n      redirect: false,\n      variables: { 'ap': true, 'pr': true, 'rh': true, 'ra': true, 'te': true, 'wd': true, 'wg': true, 'ws': true },\n      aggregationOptions: Store.getAggregations(),\n      aggregations: {},\n      variableList: [],\n      stations: {},\n      stationList: [],\n      filterString: '',\n      filterSelected: 'disabled',\n      description: '',\n      multiSelect: false,\n      userId: null,\n      userType: \"trial\",\n      user: null,\n      name: \"\",\n      email: \"\",\n      organisation: \"\",\n      role: \"user\",\n      notify: \"welcome\",\n      aggregationAccess: \"unlimited\",\n      variableAccess: \"standard\",\n      periodAccess: \"unlimited\",\n      stationAccess: \"unlimited\"\n    };\n  }\n\n  change(key, value) {\n    const newState = {};\n    newState[key] = value;\n    this.setState({ ...this.state, ...newState });\n  }\n\n  submit() {\n    let stations = [];\n    let variables = [];\n    let aggregations = [];\n    const dateRangeReference = this.dateRangeReference.current;\n    let startDate = null;\n    let endDate = null;\n\n    for (const station of Object.keys(this.state.stations)) {\n      if (this.state.stations[station]) {\n        stations.push(station);\n      }\n    }\n\n    for (const variable of Object.keys(this.state.variables)) {\n      if (this.state.variables[variable]) {\n        variables.push(variable);\n      }\n    }\n\n    for (const aggregation of Object.keys(this.state.aggregationOptions)) {\n      if (this.state.aggregations[aggregation]) {\n        aggregations.push(aggregation);\n      }\n    }\n\n    if (dateRangeReference && dateRangeReference.state.startDate && dateRangeReference.state.startDate instanceof Date) {\n      startDate = dateRangeReference.state.startDate.getFullYear() + \"-\" + (\"0\"+(dateRangeReference.state.startDate.getMonth()+1)).slice(-2) + \"-\" + (\"0\" + dateRangeReference.state.startDate.getDate()).slice(-2) + 'T00:00:00.000Z';\n    }\n    if (dateRangeReference && dateRangeReference.state.endDate && dateRangeReference.state.endDate instanceof Date) {\n      endDate = dateRangeReference.state.endDate.getFullYear() + \"-\" + (\"0\"+(dateRangeReference.state.endDate.getMonth()+1)).slice(-2) + \"-\" + (\"0\" + dateRangeReference.state.endDate.getDate()).slice(-2) + 'T23:59:59.000Z';\n    }\n\n    const accessObject = {\n      stations: {\n        unlimited: (this.state.stationAccess === \"unlimited\"),\n        specific: (this.state.stationAccess === \"stations\" || this.state.stationAccess === \"specific\") ? stations : []\n      },\n      variables: {\n        unlimited: (this.state.variableAccess === \"unlimited\"),\n        standard: (this.state.variableAccess === \"standard\"),\n        specific: (this.state.variableAccess === \"specific\") ? variables : [],\n      },\n      period: {\n        unlimited: (this.state.periodAccess === \"unlimited\"),\n        startDate: (this.state.periodAccess === \"specific\" && startDate) ? startDate : null,\n        endDate: (this.state.periodAccess === \"specific\") ? endDate : endDate,\n      },\n      aggregation: {\n        unlimited: (this.state.aggregationAccess === \"unlimited\"),\n        specific: (this.state.aggregationAccess === \"specific\") ? aggregations : [],\n      },\n    };\n\n    const user = {\n      name: this.state.name,\n      company: this.state.organisation,\n      email: this.state.email.trim(),\n      role: this.state.role,\n      userType: this.state.userType,\n      notify: this.state.notify,\n      access: accessObject\n    };\n\n    axios(\n      {\n        url: \"/users\" + ((this.state.userId) ? (\"/\" + this.state.userId) : \"\"),\n        method: (this.state.userId) ? \"PUT\" : \"POST\",\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        data: user\n      }\n    )\n      .then(response => response.data)\n      .then(response => {\n        if (response.status === \"success\") {\n          this.setState({ redirect: true });\n        } else {\n          alert('User create failed:\\n' + response.error);\n        }\n      })\n      .catch(function(err) {\n        alert('User create failed.');\n      });\n  }\n\n\n  handleVariableChange(e, variable) {\n    const newState = { 'variables': this.state.variables };\n    newState['variables'][variable] = !this.state['variables'][variable];\n    this.setState({ ...this.state, ...newState });\n  }\n\n  handleStationChange(e, stationCode) {\n    const newState = { 'stations': this.state.stations };\n    newState['stations'][stationCode] = !this.state['stations'][stationCode];\n    this.setState({ ...this.state, ...newState });\n  }\n\n  handleAggregationChange(e, aggregationCode) {\n    const newState = { 'aggregations': this.state.aggregations };\n    newState['aggregations'][aggregationCode] = !this.state['aggregations'][aggregationCode];\n    this.setState({ ...this.state, ...newState });\n  }\n\n  handleMultiSelectChange() {\n    let targetValue = (this.state.multiSelect) ? false : true;\n    let stations = this.state.stations;\n\n    this.state.stationList.filter(e => ((e.location.name.toLowerCase().includes(this.state.filterString) || e.code.toLowerCase().includes(this.state.filterString))  && (this.state.filterSelected === 'disabled' || this.state.stations[e.code]))).map((station) => {\n      stations[station.code] = targetValue;\n    });\n\n    const newState = { multiSelect: targetValue, stations: stations };\n    this.setState({ ...this.state, ...newState });\n  }\n\n  componentDidMount() {\n    if (this.props.id) {\n      this.setState({userId: this.props.id, submitLabel: \"Edit user\" });\n      axios.get(\n        \"/users/\" + this.props.id\n      )\n        .then(response => response.data)\n        .then(response => {\n          if(response.user) {\n            this.setState({\n              user: response.user,\n              name: response.user.profile.name,\n              organisation: response.user.profile.company,\n              email: response.user.email,\n              role: response.user.role,\n              userType: (response.user.userType) ? response.user.userType : \"trial\",\n              notify: \"\"\n            });\n\n            if (response.user.access) {\n              const access = response.user.access;\n              this.setState({\n                aggregationAccess: (access.aggregation.unlimited) ? \"unlimited\" : \"specific\",\n                variableAccess: (access.variables.unlimited) ? \"unlimited\" : ((access.variables.standard) ? \"standard\" : \"specific\"),\n                periodAccess: (access.period.unlimited) ? \"unlimited\" : \"specific\",\n                stationAccess: (access.stations.unlimited) ? \"unlimited\" : \"specific\",\n                variables: _.zipObject(access.variables.specific, access.variables.specific.map(x => true)),\n                stations: _.zipObject(access.stations.specific, access.stations.specific.map(x => true)),\n                aggregations: _.zipObject(access.aggregation.specific, access.aggregation.specific.map(x => true)),\n              });\n\n              if (access.period.unlimited === false && this.dateRangeReference) {\n                // Set dates in datepicker.\n                this.dateRangeReference.current.setDates(access.period.startDate, access.period.endDate);\n              }\n            }\n          }\n        });\n    }\n\n    Dispatcher.dispatch({\n      actionType: Constants.CHECK_INIT\n    });\n  }\n\n  updateStations() {\n    const accessStationCodes = Store.getAccessStationCodes();\n    const stationList = Store.getStations().filter(function(station){ return accessStationCodes.indexOf(station.code) !== -1; });\n    this.setState({ 'stationList': stationList });\n  }\n\n  updateVariables() {\n    const accessVariableCodes = Store.getAccessVariableCodes();\n    const variableList = Store.getVariables().filter(function(variable){ return accessVariableCodes.indexOf(variable.shortcode) !== -1; });\n    this.setState({ 'variableList': variableList });\n  }\n\n  componentWillMount() {\n    Store.on(Constants.EVENT_STATIONS_READY, this.updateStations);\n    Store.on(Constants.EVENT_VARIABLES_READY, this.updateVariables);\n  }\n\n  componentWillUnmount() {\n    Store.removeListener(Constants.EVENT_STATIONS_READY, this.updateStations);\n    Store.removeListener(Constants.EVENT_VARIABLES_READY, this.updateVariables);\n  }\n\n  render() {\n    if (this.state.redirect === true) {\n      return <Redirect to='/user-management' />\n    }\n\n    return (\n      <div id=\"user-overview\">\n        {/* Page Header */}\n        <Row noGutters className=\"page-header py-4\">\n          <PageTitle sm=\"4\" title=\"User\" subtitle={this.state.submitLabel} className=\"text-sm-left\" />\n        </Row>\n\n        <Row>\n          <Col>\n            <Card small className=\"mb-4\">\n              <CardHeader className=\"border-bottom\">\n                <h6 className=\"m-0\">General</h6>\n              </CardHeader>\n              <CardBody className=\"pt-0\">\n                <Row className=\"border-bottom\">\n                  <Col sm=\"3\" className=\"d-flex mb-3 mt-3\">\n                    Name\n                  </Col>\n                  <Col sm=\"3\" className=\"d-flex mb-2 mt-2\">\n                    <FormInput\n                      placeholder=\"\"\n                      value={this.state.name}\n                      onChange={e => this.change(\"name\", e.target.value)}\n                    />\n                  </Col>\n                </Row>\n                <Row className=\"border-bottom\">\n                  <Col sm=\"3\" className=\"d-flex mb-3 mt-3\">\n                    Email\n                  </Col>\n                  <Col sm=\"3\" className=\"d-flex mb-2 mt-2\">\n                    <FormInput\n                      placeholder=\"\"\n                      value={this.state.email}\n                      onChange={e => this.change(\"email\", e.target.value)}\n                    />\n                  </Col>\n                </Row>\n                <Row className=\"border-bottom\">\n                  <Col sm=\"3\" className=\"d-flex mb-3 mt-3\">\n                    Organisation\n                  </Col>\n                  <Col sm=\"3\" className=\"d-flex mb-2 mt-2\">\n                    <FormInput\n                      placeholder=\"\"\n                      value={this.state.organisation}\n                      onChange={e => this.change(\"organisation\", e.target.value)}\n                    />\n                  </Col>\n                </Row>\n                <Row className=\"border-bottom\">\n                  <Col sm=\"3\" className=\"d-flex mb-2 mt-3\">\n                    Role\n                  </Col>\n                  <Col sm=\"3\" className=\"d-flex mb-2 mt-2\">\n                    <InputGroup>\n                      <FormSelect value={this.state.role} onChange={e => this.change(\"role\", e.target.value)}>\n                        <option value=\"user\">User</option>\n                        <option value=\"admin\">Admin</option>\n                      </FormSelect>\n                    </InputGroup>\n                  </Col>\n                </Row>\n              <Row>\n                <Col sm=\"3\" className=\"d-flex mb-2 mt-3\">\n                  Notify by email\n                </Col>\n                <Col sm=\"3\" className=\"d-flex mb-2 mt-2\">\n                  <InputGroup>\n                    <FormSelect value={this.state.notify} onChange={e => this.change(\"notify\", e.target.value)}>\n                      <option value=\"\">None</option>\n                      <option value=\"welcome\">Welcome</option>\n                      <option value=\"update\">Access update</option>\n                      <option value=\"migration\">Migration</option>\n                    </FormSelect>\n                  </InputGroup>\n                </Col>\n              </Row>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n\n        <Row>\n          <Col>\n            <Card small className=\"mb-4\">\n              <CardHeader className=\"border-bottom\">\n                <h6 className=\"m-0\">Access</h6>\n              </CardHeader>\n              <CardBody className=\"pt-0\">\n                <Row className=\"border-bottom\">\n                  <Col sm=\"3\" className=\"d-flex mb-2 mt-3\">\n                    Data sets / aggregation\n                  </Col>\n                  <Col sm=\"3\" className=\"d-flex mb-2 mt-2\">\n                    <InputGroup>\n                      <FormSelect value={this.state.aggregationAccess}\n                                  onChange={e => this.change(\"aggregationAccess\", e.target.value)}>\n                        <option value=\"unlimited\">All</option>\n                        <option value=\"specific\">Specific</option>\n                      </FormSelect>\n                    </InputGroup>\n                  </Col>\n                </Row>\n                {this.state.aggregationAccess === \"specific\" &&\n                <Row className=\"border-bottom\">\n                  <Col sm=\"3\" className=\"d-flex mb-3 mt-3\">\n                    Specify data sets\n                  </Col>\n                  <Col sm=\"4\" md=\"3\" className=\"mb-2 mt-2\">\n                    <fieldset>\n                      {Object.keys(this.state.aggregationOptions).map((aggregationKey) => {\n                        return (\n                          <FormCheckbox checked={this.state.aggregations[aggregationKey]}\n                                        onChange={e => this.handleAggregationChange(e, aggregationKey)}>{this.state.aggregationOptions[aggregationKey]}</FormCheckbox>\n                        )\n                      })}\n                    </fieldset>\n                  </Col>\n                </Row>\n                }\n                <Row className=\"border-bottom\">\n                  <Col sm=\"3\" className=\"d-flex mb-2 mt-3\">\n                    Variables\n                  </Col>\n                  <Col sm=\"3\" className=\"d-flex mb-2 mt-2\">\n                    <InputGroup>\n                      <FormSelect value={this.state.variableAccess}\n                                  onChange={e => this.change(\"variableAccess\", e.target.value)}>\n                        <option value=\"unlimited\">All</option>\n                        <option value=\"standard\">Standard</option>\n                        <option value=\"specific\">Specific</option>\n                      </FormSelect>\n                    </InputGroup>\n                  </Col>\n                </Row>\n                {this.state.variableAccess === \"specific\" &&\n                <Row className=\"border-bottom\">\n                  <Col sm=\"3\" className=\"d-flex mb-3 mt-3\">\n                    Specify variables\n                  </Col>\n                  <Col sm=\"4\" md=\"3\" className=\"mb-2 mt-2\">\n                    <strong className=\"text-muted d-block mb-2\">Standard variables</strong>\n                    <fieldset>\n                      {this.state.variableList.filter(variable => variable.standard === true).map((variable) => {\n                        return (\n                          <FormCheckbox checked={this.state.variables[variable.shortcode]}\n                                        onChange={e => this.handleVariableChange(e, variable.shortcode)}>{variable.description}</FormCheckbox>\n                        )\n                      })}\n                    </fieldset>\n                  </Col>\n                  {this.state.variableList.filter(variable => variable.standard === false).length > 0 &&\n                  <Col sm=\"4\" md=\"3\" className=\"mb-2 mt-2\">\n                    <strong className=\"text-muted d-block mb-2\">Other variables</strong>\n                    <fieldset>\n                      {this.state.variableList.filter(variable => variable.standard === false).map((variable) => {\n                        return (\n                          <FormCheckbox checked={this.state.variables[variable.shortcode]}\n                                        onChange={e => this.handleVariableChange(e, variable.shortcode)}>{variable.description}</FormCheckbox>\n                        )\n                      })}\n                    </fieldset>\n                  </Col>\n                  }\n                </Row>\n                }\n                <Row className=\"border-bottom\">\n                  <Col sm=\"3\" className=\"d-flex mb-2 mt-3\">\n                    Period\n                  </Col>\n                  <Col sm=\"3\" className=\"d-flex mb-2 mt-2\">\n                    <InputGroup>\n                      <FormSelect value={this.state.periodAccess}\n                                  onChange={e => this.change(\"periodAccess\", e.target.value)}>\n                        <option value=\"unlimited\">All</option>\n                        <option value=\"specific\">Specific</option>\n                      </FormSelect>\n                    </InputGroup>\n                  </Col>\n                </Row>\n                {this.state.periodAccess === \"specific\" &&\n                <Row className=\"border-bottom\">\n                  <Col sm=\"3\" className=\"d-flex mb-3 mt-3\">\n                    Specify period\n                  </Col>\n                  <Col sm=\"3\" className=\"d-flex mb-2 mt-2\">\n                    <RangeDatePicker ref={this.dateRangeReference}/>\n                  </Col>\n                </Row>\n                }\n                <Row className=\"border-bottom\">\n                  <Col sm=\"3\" className=\"d-flex mb-2 mt-3\">\n                    Stations\n                  </Col>\n                  <Col sm=\"3\" className=\"d-flex mb-2 mt-2\">\n                    <InputGroup>\n                      <FormSelect value={this.state.stationAccess}\n                                  onChange={e => this.change(\"stationAccess\", e.target.value)}>\n                        <option value=\"unlimited\">All</option>\n                        <option value=\"stations\">Choose individual stations</option>\n                      </FormSelect>\n                    </InputGroup>\n                  </Col>\n                </Row>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n        {((this.state.stationAccess === \"stations\" || this.state.stationAccess === \"specific\")) &&\n        <Row>\n          <Col>\n            <Card small className=\"mb-2\">\n              <CardHeader className=\"border-bottom\">\n                <h6 className=\"m-0\">Specify individual stations</h6>\n              </CardHeader>\n              <CardBody className=\"p-0 pb-3\">\n                <Row className=\"border-bottom\">\n                  <Col sm=\"3\" className=\"d-flex mb-2 mt-3 ml-3\">\n                    <InputGroup className=\"mb-3\">\n                      <InputGroupAddon type=\"prepend\">\n                        <InputGroupText>Filter</InputGroupText>\n                      </InputGroupAddon>\n                      <FormInput onChange={e => this.change(\"filterString\", e.target.value.toLowerCase())}\n                                 placeholder=\"e.g. station id or station name\"/>\n                    </InputGroup>\n                  </Col>\n                  <Col sm=\"2\" className=\"d-flex mb-2 mt-3\">\n                    <InputGroup className=\"mb-3\">\n                      <InputGroupAddon type=\"prepend\">\n                        <InputGroupText>Show only selected</InputGroupText>\n                      </InputGroupAddon>\n                      <FormSelect onChange={e => this.change(\"filterSelected\", e.target.value)}>\n                        <option value={\"disabled\"}>Disabled</option>\n                        <option value={\"enabled\"}>Enabled</option>\n                      </FormSelect>\n                    </InputGroup>\n                  </Col>\n                </Row>\n                <table className=\"table mb-0\">\n                  <thead className=\"bg-light\">\n                  <tr>\n                    <th scope=\"col\" className=\"border-0\">\n                      <FormCheckbox className=\"mb-0\" checked={this.state.multiSelect}\n                                    onChange={e => this.handleMultiSelectChange(e)}/>\n                    </th>\n                    <th scope=\"col\" className=\"border-0\">\n                      Station id\n                    </th>\n                    <th scope=\"col\" className=\"border-0\">\n                      Location name\n                    </th>\n                    <th scope=\"col\" className=\"border-0\">\n                      Latitude\n                    </th>\n                    <th scope=\"col\" className=\"border-0\">\n                      Longitude\n                    </th>\n                  </tr>\n                  </thead>\n                  <tbody>\n                  {this.state.stationList.filter(e => ((e.location.name.toLowerCase().includes(this.state.filterString) || e.code.toLowerCase().includes(this.state.filterString)) && (this.state.filterSelected === 'disabled' || this.state.stations[e.code]))).map((station) => {\n                    return (\n                      <tr>\n                        <td><FormCheckbox className=\"mb-0\" checked={this.state.stations[station.code]}\n                                          onChange={e => this.handleStationChange(e, station.code)}/></td>\n                        <td>{station.code}</td>\n                        <td>{station.location.name}</td>\n                        <td>{station.location.latitude}</td>\n                        <td>{station.location.longitude}</td>\n                      </tr>\n                    )\n                  })}\n                  </tbody>\n                </table>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n        }\n        <Button theme=\"primary\" onClick={this.submit} className=\"mb-4 mr-1\">\n          {this.state.submitLabel}\n        </Button>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\r\nimport {\r\n  Container,\r\n} from \"shards-react\";\r\nimport User from \"../components/usermanagement/User\";\r\n\r\nclass AddUser extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n      <Container fluid className=\"main-content-container px-4\">\r\n        <User/>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddUser;\r\n","import React from \"react\";\r\nimport {\r\n  Container,\r\n} from \"shards-react\";\r\nimport User from \"../components/usermanagement/User\";\r\n\r\nclass EditUser extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      userId: props.match.params.id\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container fluid className=\"main-content-container px-4\">\r\n        <User id={this.state.userId}/>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditUser;\r\n","import React from \"react\";\nimport { Map, TileLayer, Marker, Popup } from \"react-leaflet\"\n\nimport Store from \"../../flux/store\";\nimport 'leaflet/dist/leaflet.css';\nimport Constants from \"../../flux/constants\";\nimport Dispatcher from \"../../flux/dispatcher\";\nimport L from 'leaflet';\nimport _ from \"lodash\";\nimport {Button, Col, Row} from \"shards-react\";\nimport PageTitle from \"../common/PageTitle\";\nimport axios from \"axios\";\nimport CircleMarker from \"react-leaflet/es/CircleMarker\";\n\ndelete L.Icon.Default.prototype._getIconUrl;\n\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\n  iconUrl: require('leaflet/dist/images/marker-icon.png'),\n  shadowUrl: require('leaflet/dist/images/marker-shadow.png')\n});\n\nexport default class MapComponent extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.submit = this.submit.bind(this);\n    this.updateStations = this.updateStations.bind(this);\n\n    this.state = {\n      bounds: [\n        [-11.710923, 41.137109],\n        [-26.2891802,52.3832053]\n      ],\n      stationList: [],\n      availableCountries: [],\n      valueList: {},\n      valueActive: false\n    };\n  }\n\n  updateStations() {\n    const stationList = Store.getStations();\n    const availableCountries = _.uniq(_.map(stationList, function(station){ return station.location.countrycode; }));\n    this.setState({ 'stationList': stationList, 'availableCountries': availableCountries });\n  }\n\n  componentWillMount() {\n    Store.on(Constants.EVENT_STATIONS_READY, this.updateStations);\n  }\n\n  componentWillUnmount() {\n    Store.removeListener(Constants.EVENT_STATIONS_READY, this.updateStations);\n  }\n\n  componentDidMount() {\n    Dispatcher.dispatch({\n      actionType: Constants.CHECK_INIT\n    });\n  }\n\n  submit() {\n    let errors = [];\n    // const dateRangeReference = this.dateRangeReference.current;\n\n    let mapConfig = {\n      'variable': \"pr\",\n      'stations': this.state.stationList.filter(s => s.location.countrycode === \"KE\" || s.location.countrycode === \"UG\").map(s => s.code),\n      'startDate': null,\n      'endDate': null\n    };\n\n    // Validation.\n    // Check date range.\n    // if (!dateRangeReference.state.startDate || !dateRangeReference.state.startDate instanceof Date) {\n    //   errors.push('Invalid start date');\n    // }\n    // if (!dateRangeReference.state.endDate || !dateRangeReference.state.endDate instanceof Date) {\n    //   errors.push('Invalid end date');\n    // }\n\n    for (const station of this.state.stationList) {\n      // mapConfig.stations.push(station.id);\n    }\n\n    if (mapConfig.stations.length == 0) {\n      errors.push('There are no stations selected.');\n    }\n\n    if (errors.length > 0) {\n      alert('Map update failed:\\n' + errors.join('\\n'));\n      return false;\n    } else {\n      mapConfig.startDate = \"2020-12-01T00:00:00Z\";\n      mapConfig.endDate = \"2020-12-31T23:59:00Z\";\n      axios(\n        {\n          url: \"/map\",\n          method: \"POST\",\n          headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n          },\n          data: mapConfig\n        }\n      )\n        .then(response => response.data)\n        .then(response => {\n          if (!response.error) {\n            this.setState({ valueList: response, valueActive: true });\n          } else {\n            alert('Creating map failed:\\n' + response.error);\n          }\n        })\n        .catch(function(err) {\n          alert('Creating map failed.');\n        });\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <Map bounds={this.state.bounds} style={{height: \"calc(100vh)\"}} maxZoom={11}>\n          {/*<TileLayer*/}\n            {/*attribution='Tiles &copy; Esri &mdash; Source: Esri, i-cubed, USDA, USGS, AEX, GeoEye, Getmapping, Aerogrid, IGN, IGP, UPR-EGP, and the GIS User Community'*/}\n            {/*url=\"https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}\"*/}\n          {/*/>*/}\n          <TileLayer\n            attribution='Tiles &copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n          />\n          {!this.state.valueActive && this.state.stationList.map((station) => {\n            return (\n              <Marker position={[station.location.latitude, station.location.longitude]}>\n                <Popup>\n                  <span>{`${station.code} ${station.location.name}`}</span>\n                </Popup>\n              </Marker>\n            )\n          })}\n          {this.state.valueActive && this.state.stationList.filter(s => this.state.valueList[s.code] !== undefined).map((station) => {\n            const value = this.state.valueList[station.code];\n            const lightness = (100 - Math.min(100, (value / 3))).toFixed(0);\n            const color = `\thsl(240, 60%, ${lightness}%)`;\n\n            return (\n              <CircleMarker center={[station.location.latitude, station.location.longitude]} fillColor={color} color={\"black\"} weight={1} fillOpacity={1} radius={6}>\n                <Popup>\n                  <span>{`${station.code} ${station.location.name}: ${value.toFixed(1)}`}</span>\n                </Popup>\n              </CircleMarker>\n            )\n          })}\n        </Map>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\r\nimport {\r\n  Container,\r\n} from \"shards-react\";\r\nimport Map from \"../components/map/Map\";\r\nimport \"../assets/map.css\";\r\n\r\nconst MapView = () => (\r\n  <Container fluid className=\"main-content-container no-padding\">\r\n    <Map/>\r\n  </Container>\r\n);\r\n\r\nexport default MapView;\r\n","import React from \"react\";\nimport _ from \"lodash\";\nimport {\n  Row,\n  Col,\n  Card,\n  CardHeader,\n  CardBody,\n  Button,\n  InputGroup,\n  InputGroupAddon,\n  InputGroupText, FormSelect, FormCheckbox, FormInput\n} from \"shards-react\";\n\nimport { Store, Dispatcher, Constants } from \"../../flux\";\nimport PageTitle from \"../common/PageTitle\";\nimport RangeDatePicker from \"../common/RangeDatePicker\";\nimport axios from \"axios\";\nimport Plot from 'react-plotly.js';\n\nexport default class GraphConfiguration extends React.Component {\n  constructor(props) {\n    super(props);\n    this.dateRangeReference = React.createRef();\n\n    this.handleStationChange = this.handleStationChange.bind(this);\n    this.change = this.change.bind(this);\n    this.changeVariable = this.changeVariable.bind(this);\n    this.submit = this.submit.bind(this);\n    this.hideGraph = this.hideGraph.bind(this);\n\n    this.updateStations = this.updateStations.bind(this);\n    this.updateVariables = this.updateVariables.bind(this);\n    this.updateAccess = this.updateAccess.bind(this);\n\n    const graphTypeLabels = {\n      'hourly-line': 'Line graph (1 hour values)',\n      'daily-line': 'Line graph (daily values)',\n      'hourly-bar': 'Bar graph (hourly values)',\n      'daily-bar': 'Bar graph (daily values)',\n      'windrose': 'Wind rose'\n    };\n\n    const availableGraphTypesByVariable = {\n      'pr': ['hourly-bar', 'daily-bar'],\n      'ws': ['windrose'],\n      'default': ['hourly-line', 'daily-line']\n    };\n\n    this.state = {\n      startDate: '',\n      endDate: '',\n      aggregation: null,\n      variable: \"ap\",\n      period: \"week\",\n      type: \"line\",\n      variableList: [],\n      hideVariables: [\"wd\", \"wg\"],\n      stations: {},\n      stationList: [],\n      filterString: '',\n      aggregations: Store.getAggregations(),\n      aggregationAccess: [],\n      graphTypeLabels: graphTypeLabels,\n      availableGraphTypesByVariable: availableGraphTypesByVariable,\n      minDate: new Date('1970-01-01'),\n      maxDate: new Date(),\n      showGraph: false,\n      graphData: [],\n      graphTitle: '',\n      graphUnits: '',\n      graphType: 'scatter'\n    };\n  }\n\n  change(key, value) {\n    const newState = {};\n    newState[key] = value;\n    this.setState(newState);\n  }\n\n  changeVariable(value) {\n    const newState = {};\n    newState['variable'] = value;\n    // Set default graph type for this variable.\n    newState['type'] = (this.state.availableGraphTypesByVariable[value]) ? this.state.availableGraphTypesByVariable[value][0] : this.state.availableGraphTypesByVariable['default'][0];\n    this.setState(newState);\n  }\n\n  handleStationChange(e, stationCode) {\n    const newState = { 'stations': this.state.stations };\n    newState['stations'][stationCode] = !this.state['stations'][stationCode];\n    this.setState(newState);\n  }\n\n  submit() {\n    let errors = [];\n    const dateRangeReference = this.dateRangeReference.current;\n\n    const aggregationByType = {\n      'hourly-bar': '1h',\n      'daily-bar': '1d',\n      'hourly-line': '1h',\n      'daily-line': '1d'\n    };\n\n    let graphConfig = {\n      'variable': this.state.variable,\n      'type': this.state.type,\n      'stations': [],\n      'period': this.state.period,\n      'startDate': null,\n      'endDate': null,\n      'aggregation': aggregationByType[this.state.type]\n    };\n\n    // Validation.\n    // Check date range.\n    if (graphConfig.period === 'custom' && (!dateRangeReference.state.startDate || !dateRangeReference.state.startDate instanceof Date)) {\n      errors.push('Invalid start date');\n    }\n    if (graphConfig.period === 'custom' && (!dateRangeReference.state.endDate || !dateRangeReference.state.endDate instanceof Date)) {\n      errors.push('Invalid end date');\n    }\n\n    for (const station of Object.keys(this.state.stations)) {\n      if (this.state.stations[station]) {\n        graphConfig.stations.push(station);\n      }\n    }\n\n    if (graphConfig.stations.length == 0) {\n      errors.push('There are no stations selected.');\n    }\n\n    if (errors.length > 0) {\n      alert('Graph plotting failed:\\n' + errors.join('\\n'));\n      return false;\n    } else {\n      if (graphConfig.period === 'custom') {\n        graphConfig.startDate = dateRangeReference.state.startDate.getFullYear() + \"-\" + (\"0\"+(dateRangeReference.state.startDate.getMonth()+1)).slice(-2) + \"-\" + (\"0\" + dateRangeReference.state.startDate.getDate()).slice(-2) + 'T00:00:00.000Z';\n        graphConfig.endDate = dateRangeReference.state.endDate.getFullYear() + \"-\" + (\"0\"+(dateRangeReference.state.endDate.getMonth()+1)).slice(-2) + \"-\" + (\"0\" + dateRangeReference.state.endDate.getDate()).slice(-2) + 'T23:59:59.000Z';\n      }\n      this.showGraph();\n      axios(\n        {\n          url: \"/graph\",\n          method: \"POST\",\n          headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n          },\n          data: graphConfig\n        }\n      )\n        .then(response => response.data)\n        .then(response => {\n          if (Array.isArray(response)) {\n            const graphTitle = this.state.variableList.find(v => v.shortcode === this.state.variable)['description'];\n            const units = {\n              'ap': 'kPa',\n              'pr': 'mm',\n              'rh': '-',\n              'ra': 'W/m2',\n              'te': 'deg C',\n              'ws': 'm/s'\n            };\n            const graphUnits = units[this.state.variable];\n            let graphType = 'scatter';\n            if (this.state.type === 'windrose') {\n\n            } else if (this.state.type.slice(-3) === 'bar') {\n              graphType = 'bar';\n            }\n\n            const graphData = response.map((serie) => { return {\n              x: serie.timestamps,\n              y: serie.values,\n              type: graphType,\n              mode: 'lines',\n              name: serie.station\n            }});\n            this.setState({'graphData': graphData, 'graphType': graphType, 'graphTitle': graphTitle, 'graphUnits': graphUnits });\n          } else {\n            this.hideGraph();\n            alert('Creating graph failed:\\n' + response.error);\n          }\n        })\n        .catch(function(err) {\n          alert('Creating graph failed.');\n        });\n    }\n  }\n\n  showGraph() {\n    this.setState({ 'showGraph': true });\n  }\n\n  hideGraph() {\n    this.setState({ 'showGraph': false, 'graphData': [] });\n  }\n\n  updateStations() {\n    const accessStationCodes = Store.getAccessStationCodes();\n    const stationList = Store.getStations().filter(function(station){ return accessStationCodes.indexOf(station.code) !== -1; });\n    this.setState({ 'stationList': stationList });\n  }\n\n  updateVariables() {\n    const accessVariableCodes = Store.getAccessVariableCodes();\n    const variableList = Store.getVariables().filter(function(variable){ return accessVariableCodes.indexOf(variable.shortcode) !== -1; });\n    this.setState({ 'variableList': variableList });\n    if (variableList.length && variableList[0].shortcode) {\n      this.changeVariable(variableList[0].shortcode);\n    }\n  }\n\n  updateAccess() {\n    const user = Store.getUser();\n    if(_.has(user, 'access.period.unlimited') && user.access.period.unlimited !== true) {\n      this.setState({ 'minDate': new Date(user.access.period.startDate), 'maxDate': (new Date() > new Date(user.access.period.endDate)) ? new Date(user.access.period.endDate) : new Date() });\n      if (this.dateRangeReference.current) {\n        this.dateRangeReference.current.changeLimit(this.state.minDate, this.state.maxDate);\n      }\n    }\n  }\n\n  componentWillMount() {\n    Store.on(Constants.EVENT_STATIONS_READY, this.updateStations);\n    Store.on(Constants.EVENT_VARIABLES_READY, this.updateVariables);\n    Store.on(Constants.EVENT_USER_READY, this.updateAccess);\n  }\n\n  componentWillUnmount() {\n    Store.removeListener(Constants.EVENT_STATIONS_READY, this.updateStations);\n    Store.removeListener(Constants.EVENT_VARIABLES_READY, this.updateVariables);\n    Store.removeListener(Constants.EVENT_USER_READY, this.updateAccess);\n  }\n\n  componentDidMount() {\n    Dispatcher.dispatch({\n      actionType: Constants.CHECK_INIT\n    });\n  }\n\n  render() {\n    return (\n      <div id=\"graph\">\n        {this.state.showGraph === false &&\n        <div>\n          <Row noGutters className=\"page-header py-4\">\n            <PageTitle sm=\"4\" title=\"Configure graph\" subtitle=\"\" className=\"text-sm-left\"/>\n          </Row>\n          <div>\n            <Row>\n              <Col>\n                <Card small className=\"mb-4\">\n                  <CardHeader className=\"border-bottom\">\n                    <h6 className=\"m-0\">Graph settings</h6>\n                  </CardHeader>\n                  <CardBody className=\"pt-0\">\n                    <Row className=\"border-bottom\">\n                      <Col sm=\"3\" className=\"d-flex mb-2 mt-3\">\n                        Variable\n                      </Col>\n                      <Col sm=\"3\" className=\"d-flex mb-2 mt-2\">\n                        <InputGroup>\n                          <InputGroupAddon type=\"prepend\">\n                            <InputGroupText>Variable</InputGroupText>\n                          </InputGroupAddon>\n                          <FormSelect onChange={e => this.changeVariable(e.target.value)}>\n                            {this.state.variableList.filter((variable) => this.state.hideVariables.indexOf(variable.shortcode) === -1).map((variable) => {\n                              return (\n                                <option value={variable.shortcode}>{variable.description}</option>\n                              )\n                            })}\n                          </FormSelect>\n                        </InputGroup>\n                      </Col>\n                    </Row>\n                    <Row className=\"border-bottom\">\n                      <Col sm=\"3\" className=\"d-flex mb-2 mt-3\">\n                        Graph\n                      </Col>\n                      <Col sm=\"3\" className=\"d-flex mb-2 mt-2\">\n                        <InputGroup>\n                          <InputGroupAddon type=\"prepend\">\n                            <InputGroupText>Type</InputGroupText>\n                          </InputGroupAddon>\n                          <FormSelect onChange={e => this.change(\"type\", e.target.value)}>\n                            {((this.state.availableGraphTypesByVariable[this.state.variable]) ? this.state.availableGraphTypesByVariable[this.state.variable] : this.state.availableGraphTypesByVariable['default']).map((graphCode) => {\n                              return (\n                                <option value={graphCode}>{this.state.graphTypeLabels[graphCode]}</option>\n                              )\n                            })}\n                          </FormSelect>\n                        </InputGroup>\n                      </Col>\n                    </Row>\n                    <Row className={`${this.state.period === \"custom\" ? \"border-bottom\" : \"\"}`}>\n                      <Col sm=\"3\" className=\"d-flex mb-2 mt-3\">\n                        Period\n                      </Col>\n                      <Col sm=\"3\" className=\"d-flex mb-2 mt-2\">\n                        <InputGroup>\n                          <InputGroupAddon type=\"prepend\">\n                            <InputGroupText>Period</InputGroupText>\n                          </InputGroupAddon>\n                          <FormSelect onChange={e => this.change(\"period\", e.target.value)}>\n                            <option value=\"week\">Last week</option>\n                            <option value=\"month\">Last month</option>\n                            <option value=\"custom\">Custom period</option>\n                          </FormSelect>\n                        </InputGroup>\n                      </Col>\n                    </Row>\n                    {this.state.period === \"custom\" &&\n                    <Row>\n                      <Col sm=\"3\" className=\"d-flex mb-3 mt-3\">\n                        Specify period\n                      </Col>\n                      <Col sm=\"3\" className=\"d-flex mb-2 mt-2\">\n                        <RangeDatePicker ref={this.dateRangeReference} minDate={this.state.minDate}\n                                         maxDate={this.state.maxDate}/>\n                      </Col>\n                    </Row>\n                    }\n                  </CardBody>\n                </Card>\n              </Col>\n            </Row>\n            <Row>\n              <Col>\n                <Card small className=\"mb-2 scroll-500\">\n                  <CardHeader className=\"border-bottom\">\n                    <h6 className=\"m-0\">Stations</h6>\n                  </CardHeader>\n                  <CardBody className=\"p-0 pb-3\">\n                    <Row className=\"border-bottom\">\n                      <Col sm=\"3\" className=\"d-flex mb-2 mt-3 ml-3\">\n                        <InputGroup className=\"mb-3\">\n                          <InputGroupAddon type=\"prepend\">\n                            <InputGroupText>Filter</InputGroupText>\n                          </InputGroupAddon>\n                          <FormInput onChange={e => this.change(\"filterString\", e.target.value.toLowerCase())}\n                                     placeholder=\"e.g. station id or station name\"/>\n                        </InputGroup>\n                      </Col>\n                    </Row>\n                    <table className=\"table mb-0\">\n                      <thead className=\"bg-light\">\n                      <tr>\n                        <th scope=\"col\" className=\"border-0\"></th>\n                        <th scope=\"col\" className=\"border-0\">\n                          Station id\n                        </th>\n                        <th scope=\"col\" className=\"border-0\">\n                          Location name\n                        </th>\n                        <th scope=\"col\" className=\"border-0\">\n                          Latitude\n                        </th>\n                        <th scope=\"col\" className=\"border-0\">\n                          Longitude\n                        </th>\n                      </tr>\n                      </thead>\n                      <tbody>\n                      {this.state.stationList.filter(e => ((e.location.name.toLowerCase().includes(this.state.filterString) || e.code.toLowerCase().includes(this.state.filterString)))).map((station) => {\n                        return (\n                          <tr>\n                            <td><FormCheckbox className=\"mb-0\" checked={this.state.stations[station.code]}\n                                              onChange={e => this.handleStationChange(e, station.code)}/></td>\n                            <td>{station.code}</td>\n                            <td>{station.location.name}</td>\n                            <td>{station.location.latitude}</td>\n                            <td>{station.location.longitude}</td>\n                          </tr>\n                        )\n                      })}\n                      </tbody>\n                    </table>\n                  </CardBody>\n                </Card>\n                <Button theme=\"primary\" onClick={this.submit} className=\"mb-4 mr-1\">\n                  Create graph\n                </Button>\n              </Col>\n            </Row>\n          </div>\n        </div>\n        }\n        {this.state.showGraph === true &&\n        <div>\n          <Row noGutters className=\"page-header py-4\">\n            <PageTitle sm=\"4\" title={`Graph`} subtitle=\"\" className=\"text-sm-left\"/>\n          </Row>\n          <Row>\n            <Col>\n              { this.state.graphData.length > 0 &&\n              <Plot\n                data={this.state.graphData}\n                layout={\n                  {\n                    title: this.state.graphTitle,\n                    showlegend: true,\n                    yaxis: {title: {text: this.state.graphUnits}},\n                    barmode: (this.state.graphType === 'bar') ? 'group' : undefined\n                  }\n                }\n                config={\n                  {\n                    displayModeBar: true,\n                    modeBarButtonsToRemove: ['pan2d', 'select2d', 'lasso2d', 'resetScale2d', 'zoomIn2d', 'zoomOut2d', 'toggleSpikelines', 'hoverClosestCartesian', 'hoverCompareCartesian'],\n                    displaylogo: false\n                  }\n                }\n              />\n              }\n              {this.state.graphData.length === 0 &&\n                <p>Loading graph data, please wait.</p>\n              }\n            </Col>\n          </Row>\n          {this.state.graphData.length > 0 &&\n          <Row>\n            <Col>\n              <Button theme=\"primary\" onClick={this.hideGraph} className=\"mt-2 mb-2 mr-1\">\n                Back to configure graph\n              </Button>\n            </Col>\n          </Row>\n          }\n        </div>\n        }\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\n// Layout Types\nimport { DefaultLayout } from \"./layouts\";\n\n// Route Views\nimport DataExport from \"./views/DataExport\";\nimport UserManagement from \"./views/UserManagement\";\nimport AddUser from \"./views/AddUser\";\nimport EditUser from \"./views/EditUser\";\nimport MapView from \"./views/Map\";\nimport Visualize from \"./views/Visualize\";\n\nexport default [\n  {\n    path: \"/\",\n    exact: true,\n    layout: DefaultLayout,\n    component: () => <Redirect to=\"/map\" />\n  },\n  // {\n  //   path: \"/dashboard\",\n  //   layout: DefaultLayout,\n  //   component: BlogOverview\n  // },\n  // {\n  //   path: \"/profile\",\n  //   layout: DefaultLayout,\n  //   component: UserProfileLite\n  // },\n  {\n    path: \"/map\",\n    layout: DefaultLayout,\n    component: MapView\n  },\n  {\n    path: \"/visualize\",\n    layout: DefaultLayout,\n    component: Visualize\n  },\n  {\n    path: \"/export\",\n    layout: DefaultLayout,\n    component: DataExport\n  },\n  {\n    path: \"/user-management\",\n    layout: DefaultLayout,\n    component: UserManagement\n  },\n  {\n    path: \"/add-user\",\n    layout: DefaultLayout,\n    component: AddUser\n  },\n  {\n    path: \"/edit-user/:id\",\n    layout: DefaultLayout,\n    component: EditUser\n  }\n];\n","import React from \"react\";\r\nimport {\r\n  Container,\r\n} from \"shards-react\";\r\n\r\nimport GraphConfiguration from \"../components/visualize/GraphConfiguration\";\r\nimport \"../assets/visualize.css\";\r\n\r\nconst Visualize = () => (\r\n  <Container fluid className=\"main-content-container px-4\">\r\n    <GraphConfiguration/>\r\n  </Container>\r\n);\r\n\r\nexport default Visualize;\r\n","import React, { Component } from \"react\";\r\nimport GoogleAnalytics from \"react-ga\";\r\n\r\nGoogleAnalytics.initialize(process.env.REACT_APP_GAID || \"UA-115105611-X\");\r\n\r\nconst withTracker = (WrappedComponent, options = {}) => {\r\n  const trackPage = page => {\r\n    if (process.env.NODE_ENV !== \"production\" || true) {\r\n      return;\r\n    }\r\n\r\n    GoogleAnalytics.set({\r\n      page,\r\n      ...options\r\n    });\r\n    GoogleAnalytics.pageview(page);\r\n  };\r\n\r\n  const BASENAME = process.env.REACT_APP_BASENAME || \"\";\r\n\r\n  // eslint-disable-next-line\r\n  const HOC = class extends Component {\r\n    componentDidMount() {\r\n      // eslint-disable-next-line\r\n      const page = this.props.location.pathname + this.props.location.search;\r\n      trackPage(`${BASENAME}${page}`);\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n      const currentPage =\r\n        prevProps.location.pathname + prevProps.location.search;\r\n      const nextPage =\r\n        this.props.location.pathname + this.props.location.search;\r\n\r\n      if (currentPage !== nextPage) {\r\n        trackPage(`${BASENAME}${nextPage}`);\r\n      }\r\n    }\r\n\r\n    render() {\r\n      return <WrappedComponent {...this.props} />;\r\n    }\r\n  };\r\n\r\n  return HOC;\r\n};\r\n\r\nexport default withTracker;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\n\r\nimport routes from \"./routes\";\r\nimport withTracker from \"./withTracker\";\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./shards-dashboard/styles/shards-dashboards.1.1.0.min.css\";\r\n\r\nexport default () => (\r\n  <Router basename={process.env.REACT_APP_BASENAME || \"\"}>\r\n    <div>\r\n      {routes.map((route, index) => {\r\n        return (\r\n          <Route\r\n            key={index}\r\n            path={route.path}\r\n            exact={route.exact}\r\n            component={withTracker(props => {\r\n              return (\r\n                <route.layout {...props}>\r\n                  <route.component {...props} />\r\n                </route.layout>\r\n              );\r\n            })}\r\n          />\r\n        );\r\n      })}\r\n    </div>\r\n  </Router>\r\n);\r\n","module.exports = __webpack_public_path__ + \"static/media/0.73476783.jpg\";"],"sourceRoot":""}