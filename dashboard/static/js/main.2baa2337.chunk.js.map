{"version":3,"sources":["components/layout/MainNavbar/NavbarSearch.js","components/layout/MainNavbar/NavbarNav/Notifications.js","components/layout/MainNavbar/NavbarNav/UserActions.js","components/layout/MainNavbar/NavbarNav/NavbarNav.js","flux/constants.js","flux/dispatcher.js","flux/store.js","data/sidebar-nav-items.js","components/layout/MainNavbar/NavbarToggle.js","components/layout/MainNavbar/MainNavbar.js","components/layout/MainSidebar/SidebarMainNavbar.js","components/layout/MainSidebar/SidebarSearch.js","components/layout/MainSidebar/SidebarNavItem.js","components/layout/MainSidebar/SidebarNavItems.js","components/layout/MainSidebar/MainSidebar.js","components/layout/MainFooter.js","components/common/MessageBar.js","layouts/Default.js","components/common/PageTitle.js","components/common/RangeDatePicker.js","components/export/ExportCreate.js","components/export/ExportTable.js","views/DataExport.js","components/usermanagement/UserOverview.js","views/UserManagement.js","components/usermanagement/User.js","views/AddUser.js","views/EditUser.js","components/map/Map.js","views/Map.js","components/visualize/GraphConfiguration.js","routes.js","views/Visualize.js","withTracker.js","serviceWorker.js","index.js","App.js","images/avatars/0.jpg"],"names":["NavbarSearch","react_default","a","createElement","shards_react_es","className","seamless","type","placeholder","Notifications","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","visible","toggleNotifications","bind","assertThisInitialized","setState","onClick","pill","theme","open","React","Component","UserActions","toggleUserActions","tag","Dropdown","caret","toggle","NavLink","src","require","alt","DropdownMenu","right","small","Link","to","divider","NavbarNav","navbar","Notifications_Notifications","UserActions_UserActions","constants","dispatcher","Dispatcher","_store","menuVisible","navItems","title","htmlBefore","adminOnly","stations","variables","stationAccess","variableAccess","user","initInProgress","initCompleted","aggregation","1H","1D","1M","store","Store","registerToActions","toggleSidebar","register","init","actionType","_ref","payload","Constants","checkInit","retrieveStations","emit","role","filter","item","_this2","axios","get","then","response","data","_this3","length","access","unlimited","keys","specific","callback","on","removeListener","EventEmitter","NavbarToggle","handleClick","dispatch","href","MainNavbar","layout","stickyTop","classes","classNames","MainNavbar_NavbarToggle","defaultProps","SidebarMainNavbar","handleToggleSidebar","hideLogoText","style","lineHeight","SidebarSearch","display","minHeight","aria-label","SidebarNavItem","RouteNavLink","dangerouslySetInnerHTML","__html","htmlAfter","SidebarNavItems","getSidebarItems","onChange","addChangeListener","removeChangeListener","objectSpread","items","map","idx","MainSidebar_SidebarNavItem","key","aria-current","MainSidebar","sidebarNavItems","getMenuState","lg","size","md","MainSidebar_SidebarMainNavbar","MainSidebar_SidebarNavItems","MainFooter","contained","menuItems","copyright","fluid","MessageBar","updateDemo","demo","getUser","position","zIndex","DefaultLayout","children","noNavbar","noFooter","layout_MainSidebar_MainSidebar","offset","sm","layout_MainNavbar_MainNavbar","MessageBar_MessageBar","layout_MainFooter","PageTitle","subtitle","attrs","objectWithoutProperties","assign","xs","RangeDatePicker","startDate","undefined","endDate","minDate","maxDate","handleStartDateChange","handleEndDateChange","value","Date","dateFormat","selected","placeholderText","dropdownMode","ExportCreate","dateRangeReference","createRef","handleVariableChange","handleStationChange","startExport","change","submit","updateStations","updateVariables","show","variableList","stationList","filterString","description","multiSelect","e","variable","newState","stationCode","targetValue","location","name","toLowerCase","includes","code","station","event","errors","current","exportConfig","push","_i","_Object$keys","_loop","_Object$keys2","_i2","find","element","shortcode","alert","join","getFullYear","getMonth","slice","getDate","url","method","headers","Accept","Content-Type","status","window","reload","error","catch","err","accessStationCodes","getAccessStationCodes","getStations","indexOf","accessVariableCodes","getAccessVariableCodes","getVariables","_this4","id","noGutters","common_PageTitle","common_RangeDatePicker","ref","standard","checked","target","scope","handleMultiSelectChange","latitude","longitude","ExportTable","expandList","exportList","showNumber","expanded","refreshList","setInterval","initial","exports","dataExport","dist_default","date","createdAt","format","_id","colspan","DataExport","ExportTable_ExportTable","ExportCreate_ExportCreate","UserOverview","userList","demoList","filterUserType","users","profile","email","lastLogin","UserManagement","UserOverview_UserOverview","submitLabel","redirect","filterSelected","userId","password","notify","accessObject","trim","_","zipObject","x","_this5","Redirect","AddUser","User_UserOverview","EditUser","match","params","L","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","iconUrl","shadowUrl","MapComponent","bounds","availableCountries","valueList","valueActive","uniq","countrycode","mapConfig","s","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","return","Map","height","maxZoom","TileLayer","attribution","Marker","Popup","concat","lightness","Math","min","toFixed","color","CircleMarker","center","fillColor","weight","fillOpacity","radius","MapView","Map_MapComponent","GraphConfiguration","changeVariable","hideGraph","updateAccess","period","hideVariables","aggregations","getAggregations","aggregationAccess","graphTypeLabels","hourly-line","daily-line","hourly-bar","daily-bar","windrose","availableGraphTypesByVariable","default","showGraph","graphData","graphTitle","graphUnits","graphType","graphConfig","Array","isArray","v","serie","timestamps","y","values","mode","has","changeLimit","graphCode","react_plotly_default","showlegend","yaxis","text","barmode","config","displayModeBar","modeBarButtonsToRemove","displaylogo","routes","path","exact","component","GraphConfiguration_GraphConfiguration","GoogleAnalytics","initialize","process","REACT_APP_GAID","withTracker","WrappedComponent","arguments","_Component","HOC","apply","inherits","createClass","page","pathname","search","prevProps","currentPage","nextPage","Boolean","hostname","ReactDOM","render","BrowserRouter","basename","route","index","Route","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","__webpack_require__","p"],"mappings":"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","file":"static/js/main.2baa2337.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {\r\n  Form,\r\n  InputGroup,\r\n  InputGroupAddon,\r\n  InputGroupText,\r\n  FormInput\r\n} from \"shards-react\";\r\n\r\nexport default () => (\r\n  <Form className=\"main-navbar__search w-100 d-none d-md-flex d-lg-flex\">\r\n    <InputGroup seamless className=\"ml-3\">\r\n      <InputGroupAddon type=\"prepend\">\r\n        <InputGroupText>\r\n          <i className=\"material-icons\">search</i>\r\n        </InputGroupText>\r\n      </InputGroupAddon>\r\n      <FormInput\r\n        className=\"navbar-search\"\r\n        placeholder=\"Search for something...\"\r\n      />\r\n    </InputGroup>\r\n  </Form>\r\n);\r\n","import React from \"react\";\r\nimport { NavItem, NavLink, Badge, Collapse, DropdownItem } from \"shards-react\";\r\n\r\nexport default class Notifications extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      visible: false\r\n    };\r\n\r\n    this.toggleNotifications = this.toggleNotifications.bind(this);\r\n  }\r\n\r\n  toggleNotifications() {\r\n    this.setState({\r\n      visible: !this.state.visible\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <NavItem className=\"border-right dropdown notifications\">\r\n        <NavLink\r\n          className=\"nav-link-icon text-center\"\r\n          onClick={this.toggleNotifications}\r\n        >\r\n          <div className=\"nav-link-icon__wrapper\">\r\n            <i className=\"material-icons\">&#xE7F4;</i>\r\n            <Badge pill theme=\"danger\">\r\n              2\r\n            </Badge>\r\n          </div>\r\n        </NavLink>\r\n        <Collapse\r\n          open={this.state.visible}\r\n          className=\"dropdown-menu dropdown-menu-small\"\r\n        >\r\n          <DropdownItem>\r\n            <div className=\"notification__icon-wrapper\">\r\n              <div className=\"notification__icon\">\r\n                <i className=\"material-icons\">&#xE6E1;</i>\r\n              </div>\r\n            </div>\r\n            <div className=\"notification__content\">\r\n              <span className=\"notification__category\">Analytics</span>\r\n              <p>\r\n                Your website’s active users count increased by{\" \"}\r\n                <span className=\"text-success text-semibold\">28%</span> in the\r\n                last week. Great job!\r\n              </p>\r\n            </div>\r\n          </DropdownItem>\r\n          <DropdownItem>\r\n            <div className=\"notification__icon-wrapper\">\r\n              <div className=\"notification__icon\">\r\n                <i className=\"material-icons\">&#xE8D1;</i>\r\n              </div>\r\n            </div>\r\n            <div className=\"notification__content\">\r\n              <span className=\"notification__category\">Sales</span>\r\n              <p>\r\n                Last week your store’s sales count decreased by{\" \"}\r\n                <span className=\"text-danger text-semibold\">5.52%</span>. It\r\n                could have been worse!\r\n              </p>\r\n            </div>\r\n          </DropdownItem>\r\n          <DropdownItem className=\"notification__all text-center\">\r\n            View all Notifications\r\n          </DropdownItem>\r\n        </Collapse>\r\n      </NavItem>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Dropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  Collapse,\r\n  NavItem,\r\n  NavLink\r\n} from \"shards-react\";\r\n\r\nexport default class UserActions extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      visible: false\r\n    };\r\n\r\n    this.toggleUserActions = this.toggleUserActions.bind(this);\r\n  }\r\n\r\n  toggleUserActions() {\r\n    this.setState({\r\n      visible: !this.state.visible\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <NavItem tag={Dropdown} caret toggle={this.toggleUserActions}>\r\n        <DropdownToggle caret tag={NavLink} className=\"text-nowrap px-3\">\r\n          <img\r\n            className=\"user-avatar rounded-circle mr-2\"\r\n            src={require(\"./../../../../images/avatars/0.jpg\")}\r\n            alt=\"User Avatar\"\r\n          />{\" \"}\r\n          <span className=\"d-none d-md-inline-block\">Sierra Brooks</span>\r\n        </DropdownToggle>\r\n        <Collapse tag={DropdownMenu} right small open={this.state.visible}>\r\n          <DropdownItem tag={Link} to=\"profile\">\r\n            <i className=\"material-icons\">&#xE7FD;</i> Profile\r\n          </DropdownItem>\r\n          <DropdownItem divider />\r\n          <DropdownItem tag={Link} to=\"/logout\" className=\"text-danger\">\r\n            <i className=\"material-icons text-danger\">&#xE879;</i> Logout\r\n          </DropdownItem>\r\n        </Collapse>\r\n      </NavItem>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Nav } from \"shards-react\";\r\n\r\nimport Notifications from \"./Notifications\";\r\nimport UserActions from \"./UserActions\";\r\n\r\nexport default () => (\r\n  <Nav navbar className=\"border-left flex-row\">\r\n    <Notifications />\r\n    <UserActions />\r\n  </Nav>\r\n);\r\n","export default {\r\n  // Actions\r\n  CHANGE: \"CHANGE\",\r\n  TOGGLE_SIDEBAR: \"TOGGLE_SIDEBAR\",\r\n  GET_STATIONS: \"GET_STATIONS\",\r\n  CHECK_INIT: \"CHECK_INIT\",\r\n\r\n  // Events\r\n  EVENT_STATIONS_READY: \"EVENT_STATIONS_READY\",\r\n  EVENT_VARIABLES_READY: \"EVENT_VARIABLES_READY\",\r\n  EVENT_USER_READY: \"EVENT_USER_READY\"\r\n};\r\n","import { Dispatcher } from \"flux\";\r\n\r\nexport default new Dispatcher();\r\n","import { EventEmitter } from \"events\";\n\nimport Dispatcher from \"./dispatcher\";\nimport Constants from \"./constants\";\nimport getSidebarNavItems from \"../data/sidebar-nav-items\";\nimport axios from 'axios';\n\nlet _store = {\n  menuVisible: false,\n  navItems: getSidebarNavItems(),\n  stations: [],\n  variables: [],\n  stationAccess: [],\n  variableAccess: [],\n  user: {},\n  initInProgress: false,\n  initCompleted: false,\n  aggregation: {\n    \"1H\": \"Hourly\",\n    \"1D\": \"Daily\",\n    \"1M\": \"Monthly\"\n  }\n};\n\nclass Store extends EventEmitter {\n  constructor() {\n    super();\n\n    this.registerToActions = this.registerToActions.bind(this);\n    this.toggleSidebar = this.toggleSidebar.bind(this);\n\n    Dispatcher.register(this.registerToActions.bind(this));\n\n    // Run init to retrieve stations, variables and user.\n    this.init();\n  }\n\n  registerToActions({ actionType, payload }) {\n    switch (actionType) {\n      case Constants.TOGGLE_SIDEBAR:\n        this.toggleSidebar();\n        break;\n      case Constants.CHECK_INIT:\n        this.checkInit();\n        break;\n      case Constants.GET_STATIONS:\n        this.retrieveStations();\n        break;\n      default:\n    }\n  }\n\n  toggleSidebar() {\n    _store.menuVisible = !_store.menuVisible;\n    this.emit(Constants.CHANGE);\n  }\n\n  getMenuState() {\n    return _store.menuVisible;\n  }\n\n  getSidebarItems() {\n    let navItems = _store.navItems;\n    if (!_store.user.role || _store.user.role !== \"admin\") {\n      navItems = navItems.filter(item => !item.adminOnly);\n    }\n\n    return navItems;\n  }\n\n  checkInit() {\n    if (_store.initCompleted) {\n      this.emit(Constants.EVENT_STATIONS_READY);\n      this.emit(Constants.EVENT_VARIABLES_READY);\n      this.emit(Constants.EVENT_USER_READY);\n    } else if (!_store.initInProgress) {\n      this.init();\n    }\n  }\n\n  init() {\n    _store.initInProgress = true;\n    axios.get(\n      \"/init\"\n    )\n      .then(response => response.data)\n      .then(response => {\n        _store.stations = response.stations;\n        _store.stationAccess = response.stationAccess;\n        this.emit(Constants.EVENT_STATIONS_READY);\n\n        _store.variables = response.variables;\n        _store.variableAccess = response.variableAccess;\n        this.emit(Constants.EVENT_VARIABLES_READY);\n\n        _store.user = response.user;\n        this.emit(Constants.EVENT_USER_READY);\n        this.emit(Constants.CHANGE);\n\n        _store.initInProgress = false;\n        _store.initCompleted = true;\n      });\n  }\n\n  retrieveStations() {\n    if(_store.stations.length > 0) {\n      this.emit(Constants.EVENT_STATIONS_READY);\n    } else {\n      axios.get(\n        \"/services/assets/v2/stations?sort=code\"\n      )\n        .then(response => response.data)\n        .then(response => {\n          _store.stations = response.data;\n          this.emit(Constants.EVENT_STATIONS_READY);\n        });\n    }\n  }\n\n  getStations() {\n    return _store.stations;\n  }\n\n  getAccessStationCodes() {\n    return _store.stationAccess;\n  }\n\n  getVariables() {\n    return _store.variables;\n  }\n\n  getAccessVariableCodes() {\n    return _store.variableAccess;\n  }\n\n  getAggregations() {\n    return _store.aggregation;\n  }\n\n  getAccessAggregations() {\n    if(\"access\" in _store.user && \"aggregation\" in _store.user.access) {\n      return (_store.user.access.aggregation.unlimited === true) ? Object.keys(_store.aggregation) : _store.user.access.aggregation.specific;\n    } else {\n      return [];\n    }\n  }\n\n  getUser() {\n    return _store.user;\n  }\n\n  addChangeListener(callback) {\n    this.on(Constants.CHANGE, callback);\n  }\n\n  removeChangeListener(callback) {\n    this.removeListener(Constants.CHANGE, callback);\n  }\n}\n\nexport default new Store();\n","export default function() {\n  return [\n    // {\n    //   title: \"Dashboard\",\n    //   to: \"/dashboard\",\n    //   htmlBefore: '<i class=\"material-icons\">edit</i>',\n    //   htmlAfter: \"\"\n    // },\n    {\n      title: \"Map\",\n      htmlBefore: '<i class=\"material-icons\">vertical_split</i>',\n      to: \"/map\",\n    },\n    {\n      title: \"Graphs\",\n      htmlBefore: '<i class=\"material-icons\">insert_chart</i>',\n      to: \"/visualize\",\n    },\n    {\n      title: \"Data export\",\n      htmlBefore: '<i class=\"material-icons\">cloud_download</i>',\n      to: \"/export\",\n    },\n    {\n      title: \"User management\",\n      htmlBefore: '<i class=\"material-icons\">account_box</i>',\n      to: \"/user-management\",\n      adminOnly: true\n    }\n  ];\n}\n","import React from \"react\";\r\n\r\nimport { Dispatcher, Constants } from \"../../../flux\";\r\n\r\nclass NavbarToggle extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.handleClick = this.handleClick.bind(this);\r\n  }\r\n\r\n  handleClick() {\r\n    Dispatcher.dispatch({\r\n      actionType: Constants.TOGGLE_SIDEBAR\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <nav className=\"nav\">\r\n        {/* eslint-disable-next-line jsx-a11y/anchor-is-valid */}\r\n        <a href=\"#\" onClick={this.handleClick} className=\"nav-link nav-link-icon toggle-sidebar d-sm-inline d-md-inline d-lg-none text-center\">\r\n          <i className=\"material-icons\">&#xE5D2;</i>\r\n        </a>\r\n      </nav>\r\n    )\r\n  }\r\n}\r\n\r\nexport default NavbarToggle;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classNames from \"classnames\";\r\nimport { Container, Navbar } from \"shards-react\";\r\n\r\nimport NavbarSearch from \"./NavbarSearch\";\r\nimport NavbarNav from \"./NavbarNav/NavbarNav\";\r\nimport NavbarToggle from \"./NavbarToggle\";\r\n\r\nconst MainNavbar = ({ layout, stickyTop }) => {\r\n  const classes = classNames(\r\n    \"main-navbar\",\r\n    \"bg-white\",\r\n    stickyTop && \"sticky-top\"\r\n  );\r\n\r\n  return (\r\n    <div className={classes}>\r\n      <Container className=\"p-0\">\r\n        <Navbar type=\"light\" className=\"align-items-stretch flex-md-nowrap p-0\">\r\n          <NavbarSearch />\r\n          <NavbarNav />\r\n          <NavbarToggle />\r\n        </Navbar>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nMainNavbar.propTypes = {\r\n  /**\r\n   * The layout type where the MainNavbar is used.\r\n   */\r\n  layout: PropTypes.string,\r\n  /**\r\n   * Whether the main navbar is sticky to the top, or not.\r\n   */\r\n  stickyTop: PropTypes.bool\r\n};\r\n\r\nMainNavbar.defaultProps = {\r\n  stickyTop: true\r\n};\r\n\r\nexport default MainNavbar;\r\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Navbar, NavbarBrand } from \"shards-react\";\n\nimport { Dispatcher, Constants } from \"../../../flux\";\n\nclass SidebarMainNavbar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleToggleSidebar = this.handleToggleSidebar.bind(this);\n  }\n\n  handleToggleSidebar() {\n    Dispatcher.dispatch({\n      actionType: Constants.TOGGLE_SIDEBAR\n    });\n  }\n\n  render() {\n    const { hideLogoText } = this.props;\n    return (\n      <div className=\"main-navbar\">\n        <Navbar\n          className=\"align-items-stretch bg-white flex-md-nowrap border-bottom p-0\"\n          type=\"light\"\n        >\n          <NavbarBrand\n            className=\"w-100 mr-0\"\n            href=\"#\"\n            style={{ lineHeight: \"25px\" }}\n          >\n            <div className=\"d-table m-auto\">\n              {/*<img*/}\n                {/*id=\"main-logo\"*/}\n                {/*className=\"d-inline-block align-top mr-1\"*/}\n                {/*style={{ maxWidth: \"25px\" }}*/}\n                {/*src={require(\"../../../images/shards-dashboards-logo.svg\")}*/}\n                {/*alt=\"Shards Dashboard\"*/}\n              {/*/>*/}\n              {!hideLogoText && (\n                <span className=\"d-none d-md-inline ml-1\">\n                  DGM data portal\n                </span>\n              )}\n            </div>\n          </NavbarBrand>\n          {/* eslint-disable-next-line */}\n          <a\n            className=\"toggle-sidebar d-sm-inline d-md-none d-lg-none\"\n            onClick={this.handleToggleSidebar}\n          >\n            <i className=\"material-icons\">&#xE5C4;</i>\n          </a>\n        </Navbar>\n      </div>\n    );\n  }\n}\n\nSidebarMainNavbar.propTypes = {\n  /**\n   * Whether to hide the logo text, or not.\n   */\n  hideLogoText: PropTypes.bool\n};\n\nSidebarMainNavbar.defaultProps = {\n  hideLogoText: false\n};\n\nexport default SidebarMainNavbar;\n","import React from \"react\";\r\nimport {\r\n  Form,\r\n  FormInput,\r\n  InputGroup,\r\n  InputGroupAddon,\r\n  InputGroupText\r\n} from \"shards-react\";\r\n\r\nexport default () => (\r\n  <Form className=\"main-sidebar__search w-100 border-right d-sm-flex d-md-none d-lg-none\" style={{ display: \"flex\", minHeight: \"45px\" }}>\r\n    <InputGroup seamless className=\"ml-3\">\r\n      <InputGroupAddon type=\"prepend\">\r\n        <InputGroupText>\r\n          <i className=\"material-icons\">search</i>\r\n        </InputGroupText>\r\n        <FormInput\r\n          className=\"navbar-search\"\r\n          placeholder=\"Search for something...\"\r\n          aria-label=\"Search\"\r\n        />\r\n      </InputGroupAddon>\r\n    </InputGroup>\r\n  </Form>\r\n);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { NavLink as RouteNavLink } from \"react-router-dom\";\r\nimport { NavItem, NavLink } from \"shards-react\";\r\n\r\nconst SidebarNavItem = ({ item }) => (\r\n  <NavItem>\r\n    <NavLink tag={RouteNavLink} to={item.to}>\r\n      {item.htmlBefore && (\r\n        <div\r\n          className=\"d-inline-block item-icon-wrapper\"\r\n          dangerouslySetInnerHTML={{ __html: item.htmlBefore }}\r\n        />\r\n      )}\r\n      {item.title && <span>{item.title}</span>}\r\n      {item.htmlAfter && (\r\n        <div\r\n          className=\"d-inline-block item-icon-wrapper\"\r\n          dangerouslySetInnerHTML={{ __html: item.htmlAfter }}\r\n        />\r\n      )}\r\n    </NavLink>\r\n  </NavItem>\r\n);\r\n\r\nSidebarNavItem.propTypes = {\r\n  /**\r\n   * The item object.\r\n   */\r\n  item: PropTypes.object\r\n};\r\n\r\nexport default SidebarNavItem;\r\n","import React from \"react\";\r\nimport { Nav } from \"shards-react\";\r\n\r\nimport SidebarNavItem from \"./SidebarNavItem\";\r\nimport { Store } from \"../../../flux\";\r\n\r\nclass SidebarNavItems extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      navItems: Store.getSidebarItems()\r\n    };\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n  }\r\n\r\n  componentWillMount() {\r\n    Store.addChangeListener(this.onChange);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    Store.removeChangeListener(this.onChange);\r\n  }\r\n\r\n  onChange() {\r\n    this.setState({\r\n      ...this.state,\r\n      navItems: Store.getSidebarItems()\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { navItems: items } = this.state;\r\n    return (\r\n      <div className=\"nav-wrapper\">\r\n        <Nav className=\"nav--no-borders flex-column\">\r\n          {items.map((item, idx) => (\r\n            <SidebarNavItem key={idx} item={item} />\r\n          ))}\r\n          <li className=\"nav-item\"><a className=\"nav-link\" aria-current=\"page\" href=\"/logout\">\r\n            <div className=\"d-inline-block item-icon-wrapper\"><i className=\"material-icons\">exit_to_app</i></div>\r\n            <span>Logout</span></a></li>\r\n        </Nav>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default SidebarNavItems;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classNames from \"classnames\";\r\nimport { Col } from \"shards-react\";\r\n\r\nimport SidebarMainNavbar from \"./SidebarMainNavbar\";\r\nimport SidebarSearch from \"./SidebarSearch\";\r\nimport SidebarNavItems from \"./SidebarNavItems\";\r\n\r\nimport { Store } from \"../../../flux\";\r\n\r\nclass MainSidebar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      menuVisible: false,\r\n      sidebarNavItems: Store.getSidebarItems()\r\n    };\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n  }\r\n\r\n  componentWillMount() {\r\n    Store.addChangeListener(this.onChange);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    Store.removeChangeListener(this.onChange);\r\n  }\r\n\r\n  onChange() {\r\n    this.setState({\r\n      ...this.state,\r\n      menuVisible: Store.getMenuState(),\r\n      sidebarNavItems: Store.getSidebarItems()\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const classes = classNames(\r\n      \"main-sidebar\",\r\n      \"px-0\",\r\n      \"col-12\",\r\n      this.state.menuVisible && \"open\"\r\n    );\r\n\r\n    return (\r\n      <Col\r\n        tag=\"aside\"\r\n        className={classes}\r\n        lg={{ size: 2 }}\r\n        md={{ size: 3 }}\r\n      >\r\n        <SidebarMainNavbar hideLogoText={this.props.hideLogoText} />\r\n        <SidebarSearch />\r\n        <SidebarNavItems />\r\n      </Col>\r\n    );\r\n  }\r\n}\r\n\r\nMainSidebar.propTypes = {\r\n  /**\r\n   * Whether to hide the logo text, or not.\r\n   */\r\n  hideLogoText: PropTypes.bool\r\n};\r\n\r\nMainSidebar.defaultProps = {\r\n  hideLogoText: false\r\n};\r\n\r\nexport default MainSidebar;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Container, Row, Nav, NavItem, NavLink } from \"shards-react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst MainFooter = ({ contained, menuItems, copyright }) => (\r\n  <footer className=\"main-footer d-flex p-2 px-3 bg-white border-top\">\r\n    <Container fluid={contained}>\r\n      <Row>\r\n        <Nav>\r\n          {menuItems.map((item, idx) => (\r\n            <NavItem key={idx}>\r\n              <NavLink tag={Link} to={item.to}>\r\n                {item.title}\r\n              </NavLink>\r\n            </NavItem>\r\n          ))}\r\n        </Nav>\r\n        <span className=\"copyright ml-auto my-auto mr-2\">{copyright}</span>\r\n      </Row>\r\n    </Container>\r\n  </footer>\r\n);\r\n\r\nMainFooter.propTypes = {\r\n  /**\r\n   * Whether the content is contained, or not.\r\n   */\r\n  contained: PropTypes.bool,\r\n  /**\r\n   * The menu items array.\r\n   */\r\n  menuItems: PropTypes.array,\r\n  /**\r\n   * The copyright info.\r\n   */\r\n  copyright: PropTypes.string\r\n};\r\n\r\nMainFooter.defaultProps = {\r\n  contained: false,\r\n  copyright: \"Copyright © 2018 DesignRevision\",\r\n  menuItems: [\r\n    {\r\n      title: \"Home\",\r\n      to: \"#\"\r\n    },\r\n    {\r\n      title: \"Services\",\r\n      to: \"#\"\r\n    },\r\n    {\r\n      title: \"About\",\r\n      to: \"#\"\r\n    },\r\n    {\r\n      title: \"Products\",\r\n      to: \"#\"\r\n    },\r\n    {\r\n      title: \"Blog\",\r\n      to: \"#\"\r\n    }\r\n  ]\r\n};\r\n\r\nexport default MainFooter;\r\n","import React from \"react\";\r\nimport {\r\n  Container, Alert,\r\n} from \"shards-react\";\r\nimport Store from \"../../flux/store\";\r\nimport Constants from \"../../flux/constants\";\r\n\r\nexport default class MessageBar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.updateDemo = this.updateDemo.bind(this);\r\n\r\n    this.state = {\r\n      demo: false\r\n    };\r\n  }\r\n\r\n  componentWillMount() {\r\n    Store.on(Constants.EVENT_USER_READY, this.updateDemo);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    Store.removeListener(Constants.EVENT_USER_READY, this.updateDemo);\r\n  }\r\n\r\n  updateDemo() {\r\n    const user = Store.getUser();\r\n    this.setState({ 'demo': user.demo });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {(this.state.demo === true) &&\r\n        <Container fluid className=\"px-0 alert-message\" style={{position:'relative', 'zIndex': 999}}>\r\n          <Alert className=\"mb-0\">\r\n            <i className=\"fa fa-info mx-2\"></i> Your account hasn't been configured yet, therefore you only have access to demo stations and limited datasets.\r\n          </Alert>\r\n        </Container>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {Container, Row, Col} from \"shards-react\";\r\n\r\nimport MainNavbar from \"../components/layout/MainNavbar/MainNavbar\";\r\nimport MainSidebar from \"../components/layout/MainSidebar/MainSidebar\";\r\nimport MainFooter from \"../components/layout/MainFooter\";\r\nimport MessageBar from \"../components/common/MessageBar\";\r\n\r\nconst DefaultLayout = ({ children, noNavbar, noFooter }) => (\r\n  <Container fluid>\r\n    <Row>\r\n      <MainSidebar />\r\n      <Col\r\n        className=\"main-content p-0\"\r\n        lg={{ size: 10, offset: 2 }}\r\n        md={{ size: 9, offset: 3 }}\r\n        sm=\"12\"\r\n        tag=\"main\"\r\n      >\r\n        {!noNavbar && <MainNavbar />}\r\n        <MessageBar/>\r\n        {children}\r\n        {!noFooter && <MainFooter />}\r\n      </Col>\r\n    </Row>\r\n  </Container>\r\n);\r\n\r\nDefaultLayout.propTypes = {\r\n  /**\r\n   * Whether to display the navbar, or not.\r\n   */\r\n  noNavbar: PropTypes.bool,\r\n  /**\r\n   * Whether to display the footer, or not.\r\n   */\r\n  noFooter: PropTypes.bool\r\n};\r\n\r\nDefaultLayout.defaultProps = {\r\n  noNavbar: true,\r\n  noFooter: true\r\n};\r\n\r\nexport default DefaultLayout;\r\n","import React from \"react\";\r\nimport classNames from \"classnames\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Col } from \"shards-react\";\r\n\r\nconst PageTitle = ({ title, subtitle, className, ...attrs }) => {\r\n  const classes = classNames(\r\n    className,\r\n    \"text-center\",\r\n    \"text-md-left\",\r\n    \"mb-sm-0\"\r\n  );\r\n\r\n  return (\r\n    <Col xs=\"12\" sm=\"4\" className={classes} { ...attrs }>\r\n      <span className=\"text-uppercase page-subtitle\">{subtitle}</span>\r\n      <h3 className=\"page-title\">{title}</h3>\r\n    </Col>\r\n  )\r\n};\r\n\r\nPageTitle.propTypes = {\r\n  /**\r\n   * The page title.\r\n   */\r\n  title: PropTypes.string,\r\n  /**\r\n   * The page subtitle.\r\n   */\r\n  subtitle: PropTypes.string\r\n};\r\n\r\nexport default PageTitle;\r\n","import React from \"react\";\r\nimport classNames from \"classnames\";\r\nimport {\r\n  InputGroup,\r\n  DatePicker,\r\n  InputGroupAddon,\r\n  InputGroupText\r\n} from \"shards-react\";\r\n\r\nimport \"../../assets/range-date-picker.css\";\r\n\r\nclass RangeDatePicker extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      startDate: undefined,\r\n      endDate: undefined,\r\n      minDate: (props.minDate) ? props.minDate : undefined,\r\n      maxDate: (props.maxDate) ? props.maxDate : undefined\r\n    };\r\n\r\n    this.handleStartDateChange = this.handleStartDateChange.bind(this);\r\n    this.handleEndDateChange = this.handleEndDateChange.bind(this);\r\n  }\r\n\r\n  changeLimit(minDate, maxDate) {\r\n    this.setState({ minDate: minDate, maxDate: maxDate });\r\n  }\r\n\r\n  setDates(startDate, endDate) {\r\n    this.handleStartDateChange(startDate);\r\n    this.handleEndDateChange(endDate);\r\n  }\r\n\r\n  handleStartDateChange(value) {\r\n    this.setState({\r\n      ...this.state,\r\n      ...{ startDate: new Date(value) }\r\n    });\r\n  }\r\n\r\n  handleEndDateChange(value) {\r\n    this.setState({\r\n      ...this.state,\r\n      ...{ endDate: new Date(value) }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { className } = this.props;\r\n    const classes = classNames(className, \"d-flex\", \"my-auto\", \"date-range\");\r\n\r\n    return (\r\n      <InputGroup className={classes}>\r\n        <DatePicker\r\n          size=\"sm\"\r\n          dateFormat=\"yyyy-MM-dd\"\r\n          selected={this.state.startDate}\r\n          onChange={this.handleStartDateChange}\r\n          minDate={this.state.minDate}\r\n          maxDate={this.state.maxDate}\r\n          placeholderText=\"Start Date\"\r\n          dropdownMode=\"select\"\r\n          className=\"text-center\"\r\n        />\r\n        <DatePicker\r\n          size=\"sm\"\r\n          dateFormat=\"yyyy-MM-dd\"\r\n          selected={this.state.endDate}\r\n          onChange={this.handleEndDateChange}\r\n          minDate={this.state.minDate}\r\n          maxDate={this.state.maxDate}\r\n          placeholderText=\"End Date\"\r\n          dropdownMode=\"select\"\r\n          className=\"text-center\"\r\n        />\r\n        <InputGroupAddon type=\"append\">\r\n          <InputGroupText>\r\n            <i className=\"material-icons\">&#xE916;</i>\r\n          </InputGroupText>\r\n        </InputGroupAddon>\r\n      </InputGroup>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RangeDatePicker;\r\n","import React from \"react\";\nimport _ from \"lodash\";\nimport {\n  Container,\n  Row,\n  Col,\n  Card,\n  CardHeader,\n  CardBody,\n  Button,\n  InputGroup,\n  InputGroupAddon,\n  InputGroupText, FormSelect, FormCheckbox, FormGroup, FormInput, Form\n} from \"shards-react\";\n\nimport axios from 'axios';\nimport { Store, Dispatcher, Constants } from \"../../flux\";\nimport PageTitle from \"../common/PageTitle\";\nimport RangeDatePicker from \"../common/RangeDatePicker\";\n\nexport default class ExportCreate extends React.Component {\n  constructor(props) {\n    super(props);\n    this.dateRangeReference = React.createRef();\n\n    this.handleVariableChange = this.handleVariableChange.bind(this);\n    this.handleStationChange = this.handleStationChange.bind(this);\n    this.startExport = this.startExport.bind(this);\n    this.change = this.change.bind(this);\n    this.submit = this.submit.bind(this);\n\n    this.updateStations = this.updateStations.bind(this);\n    this.updateVariables = this.updateVariables.bind(this);\n\n    this.state = {\n      show: false,\n      startDate: '',\n      endDate: '',\n      variables: {},\n      variableList: [],\n      stations: {},\n      stationList: [],\n      filterString: '',\n      description: '',\n      multiSelect: false,\n      minDate: new Date('1990-01-01'),\n      maxDate: new Date()\n    };\n  }\n\n  handleVariableChange(e, variable) {\n    const newState = { 'variables': this.state.variables };\n    newState['variables'][variable] = !this.state['variables'][variable];\n    this.setState({ ...this.state, ...newState });\n  }\n\n  handleStationChange(e, stationCode) {\n    const newState = { 'stations': this.state.stations };\n    newState['stations'][stationCode] = !this.state['stations'][stationCode];\n    this.setState({ ...this.state, ...newState });\n  }\n\n  handleMultiSelectChange() {\n    let targetValue = (this.state.multiSelect) ? false : true;\n    let stations = this.state.stations;\n\n    this.state.stationList.filter(e => ((e.location.name.toLowerCase().includes(this.state.filterString) || e.code.toLowerCase().includes(this.state.filterString)))).map((station) => {\n      stations[station.code] = targetValue;\n    });\n\n    const newState = { multiSelect: targetValue, stations: stations };\n    this.setState({ ...this.state, ...newState });\n  }\n\n  change(key, value) {\n    const newState = {};\n    newState[key] = value;\n    if(key == 'filterString') {\n      newState['multiSelect'] = false;\n    }\n    this.setState({ ...this.state, ...newState });\n  }\n\n  startExport(event) {\n    const newState = { 'show': true };\n    this.setState({ ...this.state, ...newState });\n  }\n\n  submit() {\n    let errors = [];\n    const dateRangeReference = this.dateRangeReference.current;\n\n    let exportConfig = {\n      'variables': [],\n      'stations': [],\n      'startDate': null,\n      'endDate': null\n    };\n\n    // Validation.\n    // Check date range.\n    if (!dateRangeReference.state.startDate || !dateRangeReference.state.startDate instanceof Date) {\n      errors.push('Invalid start date');\n    }\n    if (!dateRangeReference.state.endDate || !dateRangeReference.state.endDate instanceof Date) {\n      errors.push('Invalid end date');\n    }\n\n    for (const station of Object.keys(this.state.stations)) {\n      if (this.state.stations[station]) {\n        exportConfig.stations.push(station);\n      }\n    }\n\n    for (const variable of Object.keys(this.state.variables)) {\n      if (this.state.variables[variable] && this.state.variableList.find(element => element.shortcode == variable)) {\n        exportConfig.variables.push(variable);\n      }\n    }\n\n    if (exportConfig.stations.length == 0) {\n      errors.push('There are no stations selected.');\n    }\n\n    if (exportConfig.variables.length == 0) {\n      errors.push('There are no variables selected.');\n    }\n\n    if (errors.length > 0) {\n      alert('Data export failed:\\n' + errors.join('\\n'));\n      return false;\n    } else {\n      exportConfig.startDate = dateRangeReference.state.startDate.getFullYear() + \"-\" + (\"0\"+(dateRangeReference.state.startDate.getMonth()+1)).slice(-2) + \"-\" + (\"0\" + dateRangeReference.state.startDate.getDate()).slice(-2) + 'T00:00:00.000Z';\n      exportConfig.endDate = dateRangeReference.state.endDate.getFullYear() + \"-\" + (\"0\"+(dateRangeReference.state.endDate.getMonth()+1)).slice(-2) + \"-\" + (\"0\" + dateRangeReference.state.endDate.getDate()).slice(-2) + 'T23:59:59.000Z';\n      exportConfig.description = this.state.description;\n\n      axios(\n        {\n          url: \"/export\",\n          method: \"POST\",\n          headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n          },\n          data: exportConfig\n        }\n      )\n        .then(response => response.data)\n        .then(response => {\n          if (response.status === \"success\") {\n            window.location.reload();\n          } else {\n            alert('Data export failed:\\n' + response.error);\n          }\n        })\n        .catch(function(err) {\n          alert('Data export failed.');\n        });\n    }\n  }\n\n  updateStations() {\n    const accessStationCodes = Store.getAccessStationCodes();\n    const stationList = Store.getStations().filter(function(station){ return accessStationCodes.indexOf(station.code) !== -1; });\n    this.setState({ 'stationList': stationList });\n  }\n\n  updateVariables() {\n    const accessVariableCodes = Store.getAccessVariableCodes();\n    const variableList = Store.getVariables().filter(function(variable){ return accessVariableCodes.indexOf(variable.shortcode) !== -1; });\n    this.setState({ 'variableList': variableList });\n  }\n\n  componentWillMount() {\n    Store.on(Constants.EVENT_STATIONS_READY, this.updateStations);\n    Store.on(Constants.EVENT_VARIABLES_READY, this.updateVariables);\n  }\n\n  componentWillUnmount() {\n    Store.removeListener(Constants.EVENT_STATIONS_READY, this.updateStations);\n    Store.removeListener(Constants.EVENT_VARIABLES_READY, this.updateVariables);\n  }\n\n  componentDidMount() {\n    Dispatcher.dispatch({\n      actionType: Constants.CHECK_INIT\n    });\n  }\n\n  render() {\n    return (\n      <div id=\"export-create\">\n        <Row noGutters className=\"page-header py-4\">\n          <PageTitle sm=\"4\" title=\"Create export\" subtitle=\"\" className=\"text-sm-left\" />\n        </Row>\n        {!this.state.show &&\n        <Row>\n          <Col>\n            <p onClick={this.startExport}><a href=\"#export-create\">Click here</a> to start a new export.</p>\n          </Col>\n        </Row>\n        }\n        {this.state.show &&\n        <div>\n        <Row>\n          <Col>\n            <Card small className=\"mb-4\">\n              <CardHeader className=\"border-bottom\">\n                <h6 className=\"m-0\">Export settings</h6>\n              </CardHeader>\n              <CardBody className=\"pt-0\">\n                <Row className=\"border-bottom\">\n                  <Col sm=\"3\" className=\"d-flex mb-3 mt-3\">\n                    Period\n                  </Col>\n                  <Col sm=\"3\" className=\"d-flex mb-2 mt-2\">\n                    <RangeDatePicker ref={this.dateRangeReference} minDate={this.state.minDate} maxDate={this.state.maxDate} />\n                  </Col>\n                </Row>\n                <Row className=\"border-bottom\">\n                  <Col sm=\"3\" className=\"d-flex mb-3 mt-3\">\n                    Variables\n                  </Col>\n                  <Col sm=\"4\" md=\"3\" className=\"mb-2 mt-2\">\n                    <strong className=\"text-muted d-block mb-2\">Standard variables</strong>\n                    <fieldset>\n                      {this.state.variableList.filter(variable => variable.standard === true).map((variable) => {\n                        return (\n                          <FormCheckbox checked={this.state.variables[variable.shortcode]} onChange={e => this.handleVariableChange(e, variable.shortcode)}>{variable.description}</FormCheckbox>\n                        )\n                      })}\n                    </fieldset>\n                  </Col>\n                  {this.state.variableList.filter(variable => variable.standard === false).length > 0 &&\n                  <Col sm=\"4\" md=\"3\" className=\"mb-2 mt-2\">\n                    <strong className=\"text-muted d-block mb-2\">Other variables</strong>\n                    <fieldset>\n                      {this.state.variableList.filter(variable => variable.standard === false).map((variable) => {\n                        return (\n                          <FormCheckbox checked={this.state.variables[variable.shortcode]}\n                                        onChange={e => this.handleVariableChange(e, variable.shortcode)}>{variable.description}</FormCheckbox>\n                        )\n                      })}\n                    </fieldset>\n                  </Col>\n                  }\n                </Row>\n                <Row>\n                  <Col sm=\"3\" className=\"d-flex mb-3 mt-3\">\n                    Description (optional)\n                  </Col>\n                  <Col sm=\"3\" className=\"d-flex mb-2 mt-2\">\n                    <FormInput\n                      placeholder=\"\"\n                      onChange={e => this.change(\"description\", e.target.value)}\n                    />\n                  </Col>\n                </Row>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <Card small className=\"mb-2\">\n              <CardHeader className=\"border-bottom\">\n                <h6 className=\"m-0\">Stations</h6>\n              </CardHeader>\n              <CardBody className=\"p-0 pb-3\">\n                <Row className=\"border-bottom\">\n                  <Col sm=\"3\" className=\"d-flex mb-2 mt-3 ml-3\">\n                    <InputGroup className=\"mb-3\">\n                      <InputGroupAddon type=\"prepend\">\n                        <InputGroupText>Filter</InputGroupText>\n                      </InputGroupAddon>\n                      <FormInput onChange={e => this.change(\"filterString\", e.target.value.toLowerCase())} placeholder=\"e.g. station id or station name\" />\n                    </InputGroup>\n                  </Col>\n                </Row>\n                <table className=\"table mb-0\">\n                  <thead className=\"bg-light\">\n                  <tr>\n                    <th scope=\"col\" className=\"border-0\">\n                      <FormCheckbox className=\"mb-0\" checked={this.state.multiSelect} onChange={e => this.handleMultiSelectChange(e)}/>\n                    </th>\n                    <th scope=\"col\" className=\"border-0\">\n                      Station id\n                    </th>\n                    <th scope=\"col\" className=\"border-0\">\n                      Location name\n                    </th>\n                    <th scope=\"col\" className=\"border-0\">\n                      Latitude\n                    </th>\n                    <th scope=\"col\" className=\"border-0\">\n                      Longitude\n                    </th>\n                  </tr>\n                  </thead>\n                  <tbody>\n                  {this.state.stationList.filter(e => ((e.location.name.toLowerCase().includes(this.state.filterString) || e.code.toLowerCase().includes(this.state.filterString)))).map((station) => {\n                    return (\n                    <tr>\n                      <td><FormCheckbox className=\"mb-0\" checked={this.state.stations[station.code]} onChange={e => this.handleStationChange(e, station.code)}/></td>\n                      <td>{station.code}</td>\n                      <td>{station.location.name}</td>\n                      <td>{station.location.latitude}</td>\n                      <td>{station.location.longitude}</td>\n                    </tr>\n                    )\n                  })}\n                  </tbody>\n                </table>\n              </CardBody>\n            </Card>\n            <Button theme=\"primary\" onClick={this.submit} className=\"mb-4 mr-1\">\n              Create export\n            </Button>\n          </Col>\n        </Row>\n        </div>\n        }\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport {\n  Row,\n  Col,\n  Card,\n  CardHeader,\n  CardBody,\n} from \"shards-react\";\n\nimport axios from 'axios';\nimport Moment from 'react-moment';\nimport PageTitle from \"../common/PageTitle\";\nimport Store from \"../../flux/store\";\n\nexport default class ExportTable extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.expandList = this.expandList.bind(this);\n\n    this.state = {\n      exportList: [],\n      showNumber: 5,\n      expanded: false\n    };\n  }\n\n  componentDidMount() {\n    this.refreshList(true);\n    setInterval(this.refreshList.bind(this), 10000);\n  }\n\n  refreshList(initial) {\n    if (initial || this.state.exportList.filter(item => item.status !== \"completed\").length > 0) {\n      axios.get(\n        \"/export\"\n      )\n        .then(response => response.data)\n        .then(response =>\n          this.setState({\n            exportList: response.exports\n          })\n        );\n    }\n  }\n\n  expandList(event) {\n    const newState = { 'expanded': true, showNumber: 100 };\n    this.setState({ ...this.state, ...newState });\n  }\n\n  render() {\n    return (\n      <div id=\"export-history\">\n        {/* Page Header */}\n        <Row noGutters className=\"page-header py-4\">\n          <PageTitle sm=\"4\" title=\"Data export\" subtitle=\"\" className=\"text-sm-left\" />\n        </Row>\n\n        {/* Default Light Table */}\n        <Row>\n          <Col>\n            <Card small className=\"mb-4\">\n              <CardHeader className=\"border-bottom\">\n                <h6 className=\"m-0\">\n                  Export history\n                  {(this.state.exportList.length > this.state.showNumber) &&\n                    <span>\n                    &nbsp;-&nbsp;<a href=\"#export-history\" onClick={this.expandList}>(show all {this.state.exportList.length})</a>\n                    </span>\n                  }\n                </h6>\n              </CardHeader>\n              <CardBody className=\"p-0 pb-3\">\n                <table className=\"table mb-0\">\n                  <thead className=\"bg-light\">\n                  {(this.state.exportList.length > 0) &&\n                  <tr>\n                    <th scope=\"col\" className=\"border-0\">\n                      Created at\n                    </th>\n                    <th scope=\"col\" className=\"border-0\">\n                      Description\n                    </th>\n                    <th scope=\"col\" className=\"border-0\">\n                      Variables\n                    </th>\n                    <th scope=\"col\" className=\"border-0\">\n                      Stations\n                    </th>\n                    <th scope=\"col\" className=\"border-0\">\n                      Status\n                    </th>\n                  </tr>\n                  }\n                  </thead>\n                  <tbody>\n                  {this.state.exportList.slice(0,this.state.showNumber).map((dataExport) => {\n                    return (\n                      <tr>\n                        <td><Moment date={dataExport.createdAt} format=\"YYYY-MM-DD HH:mm\" /></td>\n                        <td>{dataExport.description}</td>\n                        <td>\n                        {dataExport.variables.length <= 3 &&\n                        <span>{dataExport.variables.join(\", \")}</span>\n                        }\n                        {dataExport.variables.length > 3 &&\n                        <span>{dataExport.variables.length} variables</span>\n                        }\n                        </td>\n                        <td>\n                        {dataExport.stations.length <= 3 &&\n                        <span>{dataExport.stations.join(\", \")}</span>\n                        }\n                        {dataExport.stations.length > 3 &&\n                        <span>{dataExport.stations.length} stations</span>\n                        }\n                        </td>\n                        {dataExport.status === \"completed\" &&\n                        <td><a href={\"/download/export/\" + dataExport._id}>Download</a></td>\n                        }\n                        {dataExport.status !== \"completed\" &&\n                        <td>{dataExport.status}</td>\n                        }\n                      </tr>\n                    )\n                  })}\n                  {(this.state.exportList.length === 0) &&\n                    <tr>\n                      <td colspan=\"5\">You haven't generated any data exports yet.</td>\n                    </tr>\n                  }\n                  </tbody>\n                </table>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\r\nimport {\r\n  Container,\r\n} from \"shards-react\";\r\n\r\nimport ExportCreate from \"../components/export/ExportCreate\";\r\nimport ExportTable from \"../components/export/ExportTable\";\r\n\r\nconst DataExport = () => (\r\n  <Container fluid className=\"main-content-container px-4\">\r\n    <ExportTable/>\r\n    <ExportCreate/>\r\n  </Container>\r\n);\r\n\r\nexport default DataExport;\r\n","import React from \"react\";\nimport {\n  Row,\n  Col,\n  Card,\n  CardHeader,\n  CardBody, Button, InputGroup, InputGroupAddon, InputGroupText, FormInput, FormSelect,\n} from \"shards-react\";\n\nimport axios from 'axios';\nimport PageTitle from \"../common/PageTitle\";\nimport Moment from \"react-moment\";\nimport Link from \"react-router-dom/es/Link\";\nimport _ from \"lodash\";\n\nexport default class UserOverview extends React.Component {\n  constructor(props) {\n    super(props);\n    this.change = this.change.bind(this);\n\n    this.state = {\n      userList: [],\n      demoList: [],\n      filterUserType: \"\"\n    };\n  }\n\n  change(key, value) {\n    const newState = {};\n    newState[key] = value;\n    this.setState({ ...this.state, ...newState });\n  }\n\n  componentDidMount() {\n    axios.get(\n      \"/users\"\n    )\n      .then(response => response.data)\n      .then(response =>\n        this.setState({\n          userList: response.users\n        })\n      );\n  }\n\n  render() {\n    return (\n      <div id=\"user-overview\">\n        {/* Page Header */}\n        <Row noGutters className=\"page-header py-4\">\n          <PageTitle sm=\"4\" title=\"User overview\" subtitle=\"\" className=\"text-sm-left\" />\n        </Row>\n        <Link to=\"/add-user\">\n          <Button theme=\"primary\" className=\"mb-4 mr-1\">\n            Create user\n          </Button>\n        </Link>\n\n        {/* Default Light Table */}\n        <Row>\n        <Col>\n          <Card small className=\"mb-4\">\n            <CardHeader className=\"border-bottom\">\n              <h6 className=\"m-0\">\n                User list ({this.state.userList.length})\n              </h6>\n            </CardHeader>\n            <CardBody className=\"p-0 pb-3\">\n              <table className=\"table mb-0\">\n                <thead className=\"bg-light\">\n                <tr>\n                  <th scope=\"col\" className=\"border-0\">\n                    Username\n                  </th>\n                  <th scope=\"col\" className=\"border-0\">\n                    E-mail\n                  </th>\n                  <th scope=\"col\" className=\"border-0\">\n                    Last active\n                  </th>\n                  <th scope=\"col\" className=\"border-0\">\n                    Action\n                  </th>\n                </tr>\n                </thead>\n                <tbody>\n                {this.state.userList.map((user) => {\n                  return (\n                    <tr>\n                      <td>\n                        {user.profile.name}\n                        {(user.role === \"admin\") &&\n                        <span>&nbsp;<i className=\"material-icons\">grade</i></span>\n                        }\n                      </td>\n                      <td>{user.email}</td>\n                      <td>\n                        {(user.lastLogin) &&\n                        <Moment date={user.lastLogin} format=\"YYYY-MM-DD\"/>\n                        }\n                      </td>\n                      <td><Link to={\"/edit-user/\" + user._id}>Edit</Link></td>\n                    </tr>\n                  )\n                })}\n                </tbody>\n              </table>\n            </CardBody>\n          </Card>\n        </Col>\n      </Row>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\r\nimport {\r\n  Container,\r\n} from \"shards-react\";\r\nimport UserOverview from \"../components/usermanagement/UserOverview\";\r\n\r\n\r\nconst UserManagement = () => (\r\n  <Container fluid className=\"main-content-container px-4\">\r\n    <UserOverview/>\r\n  </Container>\r\n);\r\n\r\nexport default UserManagement;\r\n","import React from \"react\";\nimport {\n  Button,\n  Card, CardBody, CardHeader,\n  Col, FormCheckbox, FormInput, FormSelect, InputGroup, InputGroupAddon, InputGroupText,\n  Row,\n} from \"shards-react\";\n\nimport axios from 'axios';\nimport PageTitle from \"../common/PageTitle\";\nimport RangeDatePicker from \"../common/RangeDatePicker\";\nimport _ from \"lodash\";\nimport Store from \"../../flux/store\";\nimport Constants from \"../../flux/constants\";\nimport Dispatcher from \"../../flux/dispatcher\";\nimport Redirect from \"react-router-dom/es/Redirect\";\n\nexport default class UserOverview extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.dateRangeReference = React.createRef();\n\n    this.handleVariableChange = this.handleVariableChange.bind(this);\n    this.handleStationChange = this.handleStationChange.bind(this);\n\n    this.change = this.change.bind(this);\n    this.submit = this.submit.bind(this);\n\n    this.updateStations = this.updateStations.bind(this);\n    this.updateVariables = this.updateVariables.bind(this);\n\n    this.state = {\n      submitLabel: \"Create user\",\n      redirect: false,\n      variables: {},\n      variableList: [],\n      stations: {},\n      stationList: [],\n      filterString: '',\n      filterSelected: 'disabled',\n      description: '',\n      multiSelect: false,\n      userId: null,\n      user: null,\n      name: \"\",\n      password: \"\",\n      email: \"\",\n      role: \"user\",\n      notify: \"welcome\",\n      variableAccess: \"standard\",\n      stationAccess: \"unlimited\"\n    };\n  }\n\n  change(key, value) {\n    const newState = {};\n    newState[key] = value;\n    this.setState({ ...this.state, ...newState });\n  }\n\n  submit() {\n    let stations = [];\n    let variables = [];\n\n    for (const station of Object.keys(this.state.stations)) {\n      if (this.state.stations[station]) {\n        stations.push(station);\n      }\n    }\n\n    for (const variable of Object.keys(this.state.variables)) {\n      if (this.state.variables[variable]) {\n        variables.push(variable);\n      }\n    }\n\n    const accessObject = {\n      stations: {\n        unlimited: (this.state.stationAccess === \"unlimited\"),\n        specific: (this.state.stationAccess === \"stations\" || this.state.stationAccess === \"specific\") ? stations : []\n      },\n      variables: {\n        unlimited: (this.state.variableAccess === \"unlimited\"),\n        standard: (this.state.variableAccess === \"standard\"),\n        specific: (this.state.variableAccess === \"specific\") ? variables : [],\n      }\n    };\n\n    const user = {\n      name: this.state.name,\n      email: this.state.email.trim(),\n      password: this.state.password.trim(),\n      role: this.state.role,\n      access: accessObject\n    };\n\n    axios(\n      {\n        url: \"/users\" + ((this.state.userId) ? (\"/\" + this.state.userId) : \"\"),\n        method: (this.state.userId) ? \"PUT\" : \"POST\",\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        data: user\n      }\n    )\n      .then(response => response.data)\n      .then(response => {\n        if (response.status === \"success\") {\n          this.setState({ redirect: true });\n        } else {\n          alert('User create failed:\\n' + response.error);\n        }\n      })\n      .catch(function(err) {\n        alert('User create failed.');\n      });\n  }\n\n  handleVariableChange(e, variable) {\n    const newState = { 'variables': this.state.variables };\n    newState['variables'][variable] = !this.state['variables'][variable];\n    this.setState({ ...this.state, ...newState });\n  }\n\n  handleStationChange(e, stationCode) {\n    const newState = { 'stations': this.state.stations };\n    newState['stations'][stationCode] = !this.state['stations'][stationCode];\n    this.setState({ ...this.state, ...newState });\n  }\n\n  handleMultiSelectChange() {\n    let targetValue = (this.state.multiSelect) ? false : true;\n    let stations = this.state.stations;\n\n    this.state.stationList.filter(e => ((e.location.name.toLowerCase().includes(this.state.filterString) || e.code.toLowerCase().includes(this.state.filterString))  && (this.state.filterSelected === 'disabled' || this.state.stations[e.code]))).map((station) => {\n      stations[station.code] = targetValue;\n    });\n\n    const newState = { multiSelect: targetValue, stations: stations };\n    this.setState({ ...this.state, ...newState });\n  }\n\n  componentDidMount() {\n    if (this.props.id) {\n      this.setState({userId: this.props.id, submitLabel: \"Edit user\" });\n      axios.get(\n        \"/users/\" + this.props.id\n      )\n        .then(response => response.data)\n        .then(response => {\n          if(response.user) {\n            this.setState({\n              user: response.user,\n              name: response.user.profile.name,\n              email: response.user.email,\n              role: response.user.role\n            });\n\n            if (response.user.access) {\n              const access = response.user.access;\n              this.setState({\n                variableAccess: (access.variables.unlimited) ? \"unlimited\" : ((access.variables.standard) ? \"standard\" : \"specific\"),\n                stationAccess: (access.stations.unlimited) ? \"unlimited\" : \"specific\",\n                variables: _.zipObject(access.variables.specific, access.variables.specific.map(x => true)),\n                stations: _.zipObject(access.stations.specific, access.stations.specific.map(x => true))\n              });\n            }\n          }\n        });\n    }\n\n    Dispatcher.dispatch({\n      actionType: Constants.CHECK_INIT\n    });\n  }\n\n  updateStations() {\n    const accessStationCodes = Store.getAccessStationCodes();\n    const stationList = Store.getStations().filter(function(station){ return accessStationCodes.indexOf(station.code) !== -1; });\n    this.setState({ 'stationList': stationList });\n  }\n\n  updateVariables() {\n    const accessVariableCodes = Store.getAccessVariableCodes();\n    const variableList = Store.getVariables().filter(function(variable){ return accessVariableCodes.indexOf(variable.shortcode) !== -1; });\n    this.setState({ 'variableList': variableList });\n  }\n\n  componentWillMount() {\n    Store.on(Constants.EVENT_STATIONS_READY, this.updateStations);\n    Store.on(Constants.EVENT_VARIABLES_READY, this.updateVariables);\n  }\n\n  componentWillUnmount() {\n    Store.removeListener(Constants.EVENT_STATIONS_READY, this.updateStations);\n    Store.removeListener(Constants.EVENT_VARIABLES_READY, this.updateVariables);\n  }\n\n  render() {\n    if (this.state.redirect === true) {\n      return <Redirect to='/user-management' />\n    }\n\n    return (\n      <div id=\"user-overview\">\n        {/* Page Header */}\n        <Row noGutters className=\"page-header py-4\">\n          <PageTitle sm=\"4\" title=\"User\" subtitle={this.state.submitLabel} className=\"text-sm-left\" />\n        </Row>\n\n        <Row>\n          <Col>\n            <Card small className=\"mb-4\">\n              <CardHeader className=\"border-bottom\">\n                <h6 className=\"m-0\">General</h6>\n              </CardHeader>\n              <CardBody className=\"pt-0\">\n                <Row className=\"border-bottom\">\n                  <Col sm=\"3\" className=\"d-flex mb-3 mt-3\">\n                    Name\n                  </Col>\n                  <Col sm=\"3\" className=\"d-flex mb-2 mt-2\">\n                    <FormInput\n                      placeholder=\"\"\n                      value={this.state.name}\n                      onChange={e => this.change(\"name\", e.target.value)}\n                    />\n                  </Col>\n                </Row>\n                <Row className=\"border-bottom\">\n                  <Col sm=\"3\" className=\"d-flex mb-3 mt-3\">\n                    Email\n                  </Col>\n                  <Col sm=\"3\" className=\"d-flex mb-2 mt-2\">\n                    <FormInput\n                      placeholder=\"\"\n                      value={this.state.email}\n                      onChange={e => this.change(\"email\", e.target.value)}\n                    />\n                  </Col>\n                </Row>\n                <Row className=\"border-bottom\">\n                  <Col sm=\"3\" className=\"d-flex mb-3 mt-3\">\n                    Password\n                  </Col>\n                  <Col sm=\"3\" className=\"d-flex mb-2 mt-2\">\n                    <FormInput\n                      placeholder=\"\"\n                      value={this.state.password}\n                      onChange={e => this.change(\"password\", e.target.value)}\n                    />\n                  </Col>\n                </Row>\n                <Row>\n                  <Col sm=\"3\" className=\"d-flex mb-2 mt-3\">\n                    Role\n                  </Col>\n                  <Col sm=\"3\" className=\"d-flex mb-2 mt-2\">\n                    <InputGroup>\n                      <FormSelect value={this.state.role} onChange={e => this.change(\"role\", e.target.value)}>\n                        <option value=\"user\">User</option>\n                        <option value=\"admin\">Admin</option>\n                      </FormSelect>\n                    </InputGroup>\n                  </Col>\n                </Row>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n\n        <Row>\n          <Col>\n            <Card small className=\"mb-4\">\n              <CardHeader className=\"border-bottom\">\n                <h6 className=\"m-0\">Access</h6>\n              </CardHeader>\n              <CardBody className=\"pt-0\">\n                <Row className=\"border-bottom\">\n                  <Col sm=\"3\" className=\"d-flex mb-2 mt-3\">\n                    Variables\n                  </Col>\n                  <Col sm=\"3\" className=\"d-flex mb-2 mt-2\">\n                    <InputGroup>\n                      <FormSelect value={this.state.variableAccess}\n                                  onChange={e => this.change(\"variableAccess\", e.target.value)}>\n                        <option value=\"unlimited\">All</option>\n                        <option value=\"standard\">Standard</option>\n                        <option value=\"specific\">Specific</option>\n                      </FormSelect>\n                    </InputGroup>\n                  </Col>\n                </Row>\n                {this.state.variableAccess === \"specific\" &&\n                <Row className=\"border-bottom\">\n                  <Col sm=\"3\" className=\"d-flex mb-3 mt-3\">\n                    Specify variables\n                  </Col>\n                  <Col sm=\"4\" md=\"3\" className=\"mb-2 mt-2\">\n                    <strong className=\"text-muted d-block mb-2\">Standard variables</strong>\n                    <fieldset>\n                      {this.state.variableList.filter(variable => variable.standard === true).map((variable) => {\n                        return (\n                          <FormCheckbox checked={this.state.variables[variable.shortcode]}\n                                        onChange={e => this.handleVariableChange(e, variable.shortcode)}>{variable.description}</FormCheckbox>\n                        )\n                      })}\n                    </fieldset>\n                  </Col>\n                  {this.state.variableList.filter(variable => variable.standard === false).length > 0 &&\n                  <Col sm=\"4\" md=\"3\" className=\"mb-2 mt-2\">\n                    <strong className=\"text-muted d-block mb-2\">Other variables</strong>\n                    <fieldset>\n                      {this.state.variableList.filter(variable => variable.standard === false).map((variable) => {\n                        return (\n                          <FormCheckbox checked={this.state.variables[variable.shortcode]}\n                                        onChange={e => this.handleVariableChange(e, variable.shortcode)}>{variable.description}</FormCheckbox>\n                        )\n                      })}\n                    </fieldset>\n                  </Col>\n                  }\n                </Row>\n                }\n                <Row>\n                  <Col sm=\"3\" className=\"d-flex mb-2 mt-3\">\n                    Stations\n                  </Col>\n                  <Col sm=\"3\" className=\"d-flex mb-2 mt-2\">\n                    <InputGroup>\n                      <FormSelect value={this.state.stationAccess}\n                                  onChange={e => this.change(\"stationAccess\", e.target.value)}>\n                        <option value=\"unlimited\">All</option>\n                        <option value=\"specific\">Choose individual stations</option>\n                      </FormSelect>\n                    </InputGroup>\n                  </Col>\n                </Row>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n        {((this.state.stationAccess === \"stations\" || this.state.stationAccess === \"specific\")) &&\n        <Row>\n          <Col>\n            <Card small className=\"mb-2\">\n              <CardHeader className=\"border-bottom\">\n                <h6 className=\"m-0\">Specify individual stations</h6>\n              </CardHeader>\n              <CardBody className=\"p-0 pb-3\">\n                <Row className=\"border-bottom\">\n                  <Col sm=\"3\" className=\"d-flex mb-2 mt-3 ml-3\">\n                    <InputGroup className=\"mb-3\">\n                      <InputGroupAddon type=\"prepend\">\n                        <InputGroupText>Filter</InputGroupText>\n                      </InputGroupAddon>\n                      <FormInput onChange={e => this.change(\"filterString\", e.target.value.toLowerCase())}\n                                 placeholder=\"e.g. station id or station name\"/>\n                    </InputGroup>\n                  </Col>\n                  <Col sm=\"2\" className=\"d-flex mb-2 mt-3\">\n                    <InputGroup className=\"mb-3\">\n                      <InputGroupAddon type=\"prepend\">\n                        <InputGroupText>Show only selected</InputGroupText>\n                      </InputGroupAddon>\n                      <FormSelect onChange={e => this.change(\"filterSelected\", e.target.value)}>\n                        <option value={\"disabled\"}>Disabled</option>\n                        <option value={\"enabled\"}>Enabled</option>\n                      </FormSelect>\n                    </InputGroup>\n                  </Col>\n                </Row>\n                <table className=\"table mb-0\">\n                  <thead className=\"bg-light\">\n                  <tr>\n                    <th scope=\"col\" className=\"border-0\">\n                      <FormCheckbox className=\"mb-0\" checked={this.state.multiSelect}\n                                    onChange={e => this.handleMultiSelectChange(e)}/>\n                    </th>\n                    <th scope=\"col\" className=\"border-0\">\n                      Station id\n                    </th>\n                    <th scope=\"col\" className=\"border-0\">\n                      Location name\n                    </th>\n                    <th scope=\"col\" className=\"border-0\">\n                      Latitude\n                    </th>\n                    <th scope=\"col\" className=\"border-0\">\n                      Longitude\n                    </th>\n                  </tr>\n                  </thead>\n                  <tbody>\n                  {this.state.stationList.filter(e => ((e.location.name.toLowerCase().includes(this.state.filterString) || e.code.toLowerCase().includes(this.state.filterString)) && (this.state.filterSelected === 'disabled' || this.state.stations[e.code]))).map((station) => {\n                    return (\n                      <tr>\n                        <td><FormCheckbox className=\"mb-0\" checked={this.state.stations[station.code]}\n                                          onChange={e => this.handleStationChange(e, station.code)}/></td>\n                        <td>{station.code}</td>\n                        <td>{station.location.name}</td>\n                        <td>{station.location.latitude}</td>\n                        <td>{station.location.longitude}</td>\n                      </tr>\n                    )\n                  })}\n                  </tbody>\n                </table>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n        }\n        <Button theme=\"primary\" onClick={this.submit} className=\"mb-4 mr-1\">\n          {this.state.submitLabel}\n        </Button>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\r\nimport {\r\n  Container,\r\n} from \"shards-react\";\r\nimport User from \"../components/usermanagement/User\";\r\n\r\nclass AddUser extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n      <Container fluid className=\"main-content-container px-4\">\r\n        <User/>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddUser;\r\n","import React from \"react\";\r\nimport {\r\n  Container,\r\n} from \"shards-react\";\r\nimport User from \"../components/usermanagement/User\";\r\n\r\nclass EditUser extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      userId: props.match.params.id\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container fluid className=\"main-content-container px-4\">\r\n        <User id={this.state.userId}/>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditUser;\r\n","import React from \"react\";\nimport { Map, TileLayer, Marker, Popup } from \"react-leaflet\"\n\nimport Store from \"../../flux/store\";\nimport 'leaflet/dist/leaflet.css';\nimport Constants from \"../../flux/constants\";\nimport Dispatcher from \"../../flux/dispatcher\";\nimport L from 'leaflet';\nimport _ from \"lodash\";\nimport {Button, Col, Row} from \"shards-react\";\nimport PageTitle from \"../common/PageTitle\";\nimport axios from \"axios\";\nimport CircleMarker from \"react-leaflet/es/CircleMarker\";\n\ndelete L.Icon.Default.prototype._getIconUrl;\n\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\n  iconUrl: require('leaflet/dist/images/marker-icon.png'),\n  shadowUrl: require('leaflet/dist/images/marker-shadow.png')\n});\n\nexport default class MapComponent extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.submit = this.submit.bind(this);\n    this.updateStations = this.updateStations.bind(this);\n\n    this.state = {\n      bounds: [\n        [-11.710923, 41.137109],\n        [-26.2891802,52.3832053]\n      ],\n      stationList: [],\n      availableCountries: [],\n      valueList: {},\n      valueActive: false\n    };\n  }\n\n  updateStations() {\n    const stationList = Store.getStations();\n    const availableCountries = _.uniq(_.map(stationList, function(station){ return station.location.countrycode; }));\n    this.setState({ 'stationList': stationList, 'availableCountries': availableCountries });\n  }\n\n  componentWillMount() {\n    Store.on(Constants.EVENT_STATIONS_READY, this.updateStations);\n  }\n\n  componentWillUnmount() {\n    Store.removeListener(Constants.EVENT_STATIONS_READY, this.updateStations);\n  }\n\n  componentDidMount() {\n    Dispatcher.dispatch({\n      actionType: Constants.CHECK_INIT\n    });\n  }\n\n  submit() {\n    let errors = [];\n    // const dateRangeReference = this.dateRangeReference.current;\n\n    let mapConfig = {\n      'variable': \"pr\",\n      'stations': this.state.stationList.filter(s => s.location.countrycode === \"KE\" || s.location.countrycode === \"UG\").map(s => s.code),\n      'startDate': null,\n      'endDate': null\n    };\n\n    // Validation.\n    // Check date range.\n    // if (!dateRangeReference.state.startDate || !dateRangeReference.state.startDate instanceof Date) {\n    //   errors.push('Invalid start date');\n    // }\n    // if (!dateRangeReference.state.endDate || !dateRangeReference.state.endDate instanceof Date) {\n    //   errors.push('Invalid end date');\n    // }\n\n    for (const station of this.state.stationList) {\n      // mapConfig.stations.push(station.id);\n    }\n\n    if (mapConfig.stations.length == 0) {\n      errors.push('There are no stations selected.');\n    }\n\n    if (errors.length > 0) {\n      alert('Map update failed:\\n' + errors.join('\\n'));\n      return false;\n    } else {\n      mapConfig.startDate = \"2020-12-01T00:00:00Z\";\n      mapConfig.endDate = \"2020-12-31T23:59:00Z\";\n      axios(\n        {\n          url: \"/map\",\n          method: \"POST\",\n          headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n          },\n          data: mapConfig\n        }\n      )\n        .then(response => response.data)\n        .then(response => {\n          if (!response.error) {\n            this.setState({ valueList: response, valueActive: true });\n          } else {\n            alert('Creating map failed:\\n' + response.error);\n          }\n        })\n        .catch(function(err) {\n          alert('Creating map failed.');\n        });\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <Map bounds={this.state.bounds} style={{height: \"calc(100vh)\"}} maxZoom={11}>\n          {/*<TileLayer*/}\n            {/*attribution='Tiles &copy; Esri &mdash; Source: Esri, i-cubed, USDA, USGS, AEX, GeoEye, Getmapping, Aerogrid, IGN, IGP, UPR-EGP, and the GIS User Community'*/}\n            {/*url=\"https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}\"*/}\n          {/*/>*/}\n          <TileLayer\n            attribution='Tiles &copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n          />\n          {!this.state.valueActive && this.state.stationList.map((station) => {\n            return (\n              <Marker position={[station.location.latitude, station.location.longitude]}>\n                <Popup>\n                  <span>{`${station.code} ${station.location.name}`}</span>\n                </Popup>\n              </Marker>\n            )\n          })}\n          {this.state.valueActive && this.state.stationList.filter(s => this.state.valueList[s.code] !== undefined).map((station) => {\n            const value = this.state.valueList[station.code];\n            const lightness = (100 - Math.min(100, (value / 3))).toFixed(0);\n            const color = `\thsl(240, 60%, ${lightness}%)`;\n\n            return (\n              <CircleMarker center={[station.location.latitude, station.location.longitude]} fillColor={color} color={\"black\"} weight={1} fillOpacity={1} radius={6}>\n                <Popup>\n                  <span>{`${station.code} ${station.location.name}: ${value.toFixed(1)}`}</span>\n                </Popup>\n              </CircleMarker>\n            )\n          })}\n        </Map>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\r\nimport {\r\n  Container,\r\n} from \"shards-react\";\r\nimport Map from \"../components/map/Map\";\r\nimport \"../assets/map.css\";\r\n\r\nconst MapView = () => (\r\n  <Container fluid className=\"main-content-container no-padding\">\r\n    <Map/>\r\n  </Container>\r\n);\r\n\r\nexport default MapView;\r\n","import React from \"react\";\nimport _ from \"lodash\";\nimport {\n  Row,\n  Col,\n  Card,\n  CardHeader,\n  CardBody,\n  Button,\n  InputGroup,\n  InputGroupAddon,\n  InputGroupText, FormSelect, FormCheckbox, FormInput\n} from \"shards-react\";\n\nimport { Store, Dispatcher, Constants } from \"../../flux\";\nimport PageTitle from \"../common/PageTitle\";\nimport RangeDatePicker from \"../common/RangeDatePicker\";\nimport axios from \"axios\";\nimport Plot from 'react-plotly.js';\n\nexport default class GraphConfiguration extends React.Component {\n  constructor(props) {\n    super(props);\n    this.dateRangeReference = React.createRef();\n\n    this.handleStationChange = this.handleStationChange.bind(this);\n    this.change = this.change.bind(this);\n    this.changeVariable = this.changeVariable.bind(this);\n    this.submit = this.submit.bind(this);\n    this.hideGraph = this.hideGraph.bind(this);\n\n    this.updateStations = this.updateStations.bind(this);\n    this.updateVariables = this.updateVariables.bind(this);\n    this.updateAccess = this.updateAccess.bind(this);\n\n    const graphTypeLabels = {\n      'hourly-line': 'Line graph (1 hour values)',\n      'daily-line': 'Line graph (daily values)',\n      'hourly-bar': 'Bar graph (hourly values)',\n      'daily-bar': 'Bar graph (daily values)',\n      'windrose': 'Wind rose'\n    };\n\n    const availableGraphTypesByVariable = {\n      'default': ['hourly-line']\n    };\n\n    this.state = {\n      startDate: '',\n      endDate: '',\n      aggregation: null,\n      variable: \"ap\",\n      period: \"week\",\n      type: \"line\",\n      variableList: [],\n      hideVariables: [\"wd\", \"wg\"],\n      stations: {},\n      stationList: [],\n      filterString: '',\n      aggregations: Store.getAggregations(),\n      aggregationAccess: [],\n      graphTypeLabels: graphTypeLabels,\n      availableGraphTypesByVariable: availableGraphTypesByVariable,\n      minDate: new Date('1970-01-01'),\n      maxDate: new Date(),\n      showGraph: false,\n      graphData: [],\n      graphTitle: '',\n      graphUnits: '',\n      graphType: 'scatter'\n    };\n  }\n\n  change(key, value) {\n    const newState = {};\n    newState[key] = value;\n    this.setState(newState);\n  }\n\n  changeVariable(value) {\n    const newState = {};\n    newState['variable'] = value;\n    // Set default graph type for this variable.\n    newState['type'] = (this.state.availableGraphTypesByVariable[value]) ? this.state.availableGraphTypesByVariable[value][0] : this.state.availableGraphTypesByVariable['default'][0];\n    this.setState(newState);\n  }\n\n  handleStationChange(e, stationCode) {\n    const newState = { 'stations': this.state.stations };\n    newState['stations'][stationCode] = !this.state['stations'][stationCode];\n    this.setState(newState);\n  }\n\n  submit() {\n    let errors = [];\n    const dateRangeReference = this.dateRangeReference.current;\n\n    const aggregationByType = {\n      'hourly-bar': '1h',\n      'daily-bar': '1d',\n      'hourly-line': '1h',\n      'daily-line': '1d'\n    };\n\n    let graphConfig = {\n      'variable': this.state.variable,\n      'type': this.state.type,\n      'stations': [],\n      'period': this.state.period,\n      'startDate': null,\n      'endDate': null,\n      'aggregation': aggregationByType[this.state.type]\n    };\n\n    // Validation.\n    // Check date range.\n    if (graphConfig.period === 'custom' && (!dateRangeReference.state.startDate || !dateRangeReference.state.startDate instanceof Date)) {\n      errors.push('Invalid start date');\n    }\n    if (graphConfig.period === 'custom' && (!dateRangeReference.state.endDate || !dateRangeReference.state.endDate instanceof Date)) {\n      errors.push('Invalid end date');\n    }\n\n    for (const station of Object.keys(this.state.stations)) {\n      if (this.state.stations[station]) {\n        graphConfig.stations.push(station);\n      }\n    }\n\n    if (graphConfig.stations.length == 0) {\n      errors.push('There are no stations selected.');\n    }\n\n    if (errors.length > 0) {\n      alert('Graph plotting failed:\\n' + errors.join('\\n'));\n      return false;\n    } else {\n      if (graphConfig.period === 'custom') {\n        graphConfig.startDate = dateRangeReference.state.startDate.getFullYear() + \"-\" + (\"0\"+(dateRangeReference.state.startDate.getMonth()+1)).slice(-2) + \"-\" + (\"0\" + dateRangeReference.state.startDate.getDate()).slice(-2) + 'T00:00:00.000Z';\n        graphConfig.endDate = dateRangeReference.state.endDate.getFullYear() + \"-\" + (\"0\"+(dateRangeReference.state.endDate.getMonth()+1)).slice(-2) + \"-\" + (\"0\" + dateRangeReference.state.endDate.getDate()).slice(-2) + 'T23:59:59.000Z';\n      }\n      this.showGraph();\n      axios(\n        {\n          url: \"/graph\",\n          method: \"POST\",\n          headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n          },\n          data: graphConfig\n        }\n      )\n        .then(response => response.data)\n        .then(response => {\n          if (Array.isArray(response)) {\n            const graphTitle = this.state.variableList.find(v => v.shortcode == this.state.variable)['description'];\n            const graphUnits = this.state.variableList.find(v => v.shortcode == this.state.variable)['units'];\n            let graphType = 'scatter';\n            if (this.state.type === 'windrose') {\n\n            } else if (this.state.type.slice(-3) === 'bar') {\n              graphType = 'bar';\n            }\n\n            const graphData = response.map((serie) => { return {\n              x: serie.timestamps,\n              y: serie.values,\n              type: graphType,\n              mode: 'lines',\n              name: serie.station\n            }});\n            this.setState({'graphData': graphData, 'graphType': graphType, 'graphTitle': graphTitle, 'graphUnits': graphUnits });\n          } else {\n            this.hideGraph();\n            alert('Creating graph failed:\\n' + response.error);\n          }\n        })\n        .catch(function(err) {\n          alert('Creating graph failed.');\n        });\n    }\n  }\n\n  showGraph() {\n    this.setState({ 'showGraph': true });\n  }\n\n  hideGraph() {\n    this.setState({ 'showGraph': false, 'graphData': [] });\n  }\n\n  updateStations() {\n    const accessStationCodes = Store.getAccessStationCodes();\n    const stationList = Store.getStations().filter(function(station){ return accessStationCodes.indexOf(station.code) !== -1; });\n    this.setState({ 'stationList': stationList });\n  }\n\n  updateVariables() {\n    const accessVariableCodes = Store.getAccessVariableCodes();\n    const variableList = Store.getVariables().filter(function(variable){ return accessVariableCodes.indexOf(variable.shortcode) !== -1; });\n    this.setState({ 'variableList': variableList });\n    if (variableList.length && variableList[0].shortcode) {\n      this.changeVariable(variableList[0].shortcode);\n    }\n  }\n\n  updateAccess() {\n    const user = Store.getUser();\n    if(_.has(user, 'access.period.unlimited') && user.access.period.unlimited !== true) {\n      this.setState({ 'minDate': new Date(user.access.period.startDate), 'maxDate': (new Date() > new Date(user.access.period.endDate)) ? new Date(user.access.period.endDate) : new Date() });\n      if (this.dateRangeReference.current) {\n        this.dateRangeReference.current.changeLimit(this.state.minDate, this.state.maxDate);\n      }\n    }\n  }\n\n  componentWillMount() {\n    Store.on(Constants.EVENT_STATIONS_READY, this.updateStations);\n    Store.on(Constants.EVENT_VARIABLES_READY, this.updateVariables);\n    Store.on(Constants.EVENT_USER_READY, this.updateAccess);\n  }\n\n  componentWillUnmount() {\n    Store.removeListener(Constants.EVENT_STATIONS_READY, this.updateStations);\n    Store.removeListener(Constants.EVENT_VARIABLES_READY, this.updateVariables);\n    Store.removeListener(Constants.EVENT_USER_READY, this.updateAccess);\n  }\n\n  componentDidMount() {\n    Dispatcher.dispatch({\n      actionType: Constants.CHECK_INIT\n    });\n  }\n\n  render() {\n    return (\n      <div id=\"graph\">\n        {this.state.showGraph === false &&\n        <div>\n          <Row noGutters className=\"page-header py-4\">\n            <PageTitle sm=\"4\" title=\"Configure graph\" subtitle=\"\" className=\"text-sm-left\"/>\n          </Row>\n          <div>\n            <Row>\n              <Col>\n                <Card small className=\"mb-4\">\n                  <CardHeader className=\"border-bottom\">\n                    <h6 className=\"m-0\">Graph settings</h6>\n                  </CardHeader>\n                  <CardBody className=\"pt-0\">\n                    <Row className=\"border-bottom\">\n                      <Col sm=\"3\" className=\"d-flex mb-2 mt-3\">\n                        Variable\n                      </Col>\n                      <Col sm=\"3\" className=\"d-flex mb-2 mt-2\">\n                        <InputGroup>\n                          <InputGroupAddon type=\"prepend\">\n                            <InputGroupText>Variable</InputGroupText>\n                          </InputGroupAddon>\n                          <FormSelect onChange={e => this.changeVariable(e.target.value)}>\n                            {this.state.variableList.filter((variable) => this.state.hideVariables.indexOf(variable.shortcode) === -1).map((variable) => {\n                              return (\n                                <option value={variable.shortcode}>{variable.description}</option>\n                              )\n                            })}\n                          </FormSelect>\n                        </InputGroup>\n                      </Col>\n                    </Row>\n                    <Row className=\"border-bottom\">\n                      <Col sm=\"3\" className=\"d-flex mb-2 mt-3\">\n                        Graph\n                      </Col>\n                      <Col sm=\"3\" className=\"d-flex mb-2 mt-2\">\n                        <InputGroup>\n                          <InputGroupAddon type=\"prepend\">\n                            <InputGroupText>Type</InputGroupText>\n                          </InputGroupAddon>\n                          <FormSelect onChange={e => this.change(\"type\", e.target.value)}>\n                            {((this.state.availableGraphTypesByVariable[this.state.variable]) ? this.state.availableGraphTypesByVariable[this.state.variable] : this.state.availableGraphTypesByVariable['default']).map((graphCode) => {\n                              return (\n                                <option value={graphCode}>{this.state.graphTypeLabels[graphCode]}</option>\n                              )\n                            })}\n                          </FormSelect>\n                        </InputGroup>\n                      </Col>\n                    </Row>\n                    <Row className={`${this.state.period === \"custom\" ? \"border-bottom\" : \"\"}`}>\n                      <Col sm=\"3\" className=\"d-flex mb-2 mt-3\">\n                        Period\n                      </Col>\n                      <Col sm=\"3\" className=\"d-flex mb-2 mt-2\">\n                        <InputGroup>\n                          <InputGroupAddon type=\"prepend\">\n                            <InputGroupText>Period</InputGroupText>\n                          </InputGroupAddon>\n                          <FormSelect onChange={e => this.change(\"period\", e.target.value)}>\n                            <option value=\"week\">Last week</option>\n                            <option value=\"month\">Last month</option>\n                            <option value=\"custom\">Custom period</option>\n                          </FormSelect>\n                        </InputGroup>\n                      </Col>\n                    </Row>\n                    {this.state.period === \"custom\" &&\n                    <Row>\n                      <Col sm=\"3\" className=\"d-flex mb-3 mt-3\">\n                        Specify period\n                      </Col>\n                      <Col sm=\"3\" className=\"d-flex mb-2 mt-2\">\n                        <RangeDatePicker ref={this.dateRangeReference} minDate={this.state.minDate}\n                                         maxDate={this.state.maxDate}/>\n                      </Col>\n                    </Row>\n                    }\n                  </CardBody>\n                </Card>\n              </Col>\n            </Row>\n            <Row>\n              <Col>\n                <Card small className=\"mb-2 scroll-500\">\n                  <CardHeader className=\"border-bottom\">\n                    <h6 className=\"m-0\">Stations</h6>\n                  </CardHeader>\n                  <CardBody className=\"p-0 pb-3\">\n                    <Row className=\"border-bottom\">\n                      <Col sm=\"3\" className=\"d-flex mb-2 mt-3 ml-3\">\n                        <InputGroup className=\"mb-3\">\n                          <InputGroupAddon type=\"prepend\">\n                            <InputGroupText>Filter</InputGroupText>\n                          </InputGroupAddon>\n                          <FormInput onChange={e => this.change(\"filterString\", e.target.value.toLowerCase())}\n                                     placeholder=\"e.g. station id or station name\"/>\n                        </InputGroup>\n                      </Col>\n                    </Row>\n                    <table className=\"table mb-0\">\n                      <thead className=\"bg-light\">\n                      <tr>\n                        <th scope=\"col\" className=\"border-0\"></th>\n                        <th scope=\"col\" className=\"border-0\">\n                          Station id\n                        </th>\n                        <th scope=\"col\" className=\"border-0\">\n                          Location name\n                        </th>\n                        <th scope=\"col\" className=\"border-0\">\n                          Latitude\n                        </th>\n                        <th scope=\"col\" className=\"border-0\">\n                          Longitude\n                        </th>\n                      </tr>\n                      </thead>\n                      <tbody>\n                      {this.state.stationList.filter(e => ((e.location.name.toLowerCase().includes(this.state.filterString) || e.code.toLowerCase().includes(this.state.filterString)))).map((station) => {\n                        return (\n                          <tr>\n                            <td><FormCheckbox className=\"mb-0\" checked={this.state.stations[station.code]}\n                                              onChange={e => this.handleStationChange(e, station.code)}/></td>\n                            <td>{station.code}</td>\n                            <td>{station.location.name}</td>\n                            <td>{station.location.latitude}</td>\n                            <td>{station.location.longitude}</td>\n                          </tr>\n                        )\n                      })}\n                      </tbody>\n                    </table>\n                  </CardBody>\n                </Card>\n                <Button theme=\"primary\" onClick={this.submit} className=\"mb-4 mr-1\">\n                  Create graph\n                </Button>\n              </Col>\n            </Row>\n          </div>\n        </div>\n        }\n        {this.state.showGraph === true &&\n        <div>\n          <Row noGutters className=\"page-header py-4\">\n            <PageTitle sm=\"4\" title={`Graph`} subtitle=\"\" className=\"text-sm-left\"/>\n          </Row>\n          <Row>\n            <Col>\n              { this.state.graphData.length > 0 &&\n              <Plot\n                data={this.state.graphData}\n                layout={\n                  {\n                    title: this.state.graphTitle,\n                    showlegend: true,\n                    yaxis: {title: {text: this.state.graphUnits}},\n                    barmode: (this.state.graphType === 'bar') ? 'group' : undefined\n                  }\n                }\n                config={\n                  {\n                    displayModeBar: true,\n                    modeBarButtonsToRemove: ['pan2d', 'select2d', 'lasso2d', 'resetScale2d', 'zoomIn2d', 'zoomOut2d', 'toggleSpikelines', 'hoverClosestCartesian', 'hoverCompareCartesian'],\n                    displaylogo: false\n                  }\n                }\n              />\n              }\n              {this.state.graphData.length === 0 &&\n                <p>Loading graph data, please wait.</p>\n              }\n            </Col>\n          </Row>\n          {this.state.graphData.length > 0 &&\n          <Row>\n            <Col>\n              <Button theme=\"primary\" onClick={this.hideGraph} className=\"mt-2 mb-2 mr-1\">\n                Back to configure graph\n              </Button>\n            </Col>\n          </Row>\n          }\n        </div>\n        }\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\n// Layout Types\nimport { DefaultLayout } from \"./layouts\";\n\n// Route Views\nimport DataExport from \"./views/DataExport\";\nimport UserManagement from \"./views/UserManagement\";\nimport AddUser from \"./views/AddUser\";\nimport EditUser from \"./views/EditUser\";\nimport MapView from \"./views/Map\";\nimport Visualize from \"./views/Visualize\";\n\nexport default [\n  {\n    path: \"/\",\n    exact: true,\n    layout: DefaultLayout,\n    component: () => <Redirect to=\"/map\" />\n  },\n  // {\n  //   path: \"/dashboard\",\n  //   layout: DefaultLayout,\n  //   component: BlogOverview\n  // },\n  // {\n  //   path: \"/profile\",\n  //   layout: DefaultLayout,\n  //   component: UserProfileLite\n  // },\n  {\n    path: \"/map\",\n    layout: DefaultLayout,\n    component: MapView\n  },\n  {\n    path: \"/visualize\",\n    layout: DefaultLayout,\n    component: Visualize\n  },\n  {\n    path: \"/export\",\n    layout: DefaultLayout,\n    component: DataExport\n  },\n  {\n    path: \"/user-management\",\n    layout: DefaultLayout,\n    component: UserManagement\n  },\n  {\n    path: \"/add-user\",\n    layout: DefaultLayout,\n    component: AddUser\n  },\n  {\n    path: \"/edit-user/:id\",\n    layout: DefaultLayout,\n    component: EditUser\n  }\n];\n","import React from \"react\";\r\nimport {\r\n  Container,\r\n} from \"shards-react\";\r\n\r\nimport GraphConfiguration from \"../components/visualize/GraphConfiguration\";\r\nimport \"../assets/visualize.css\";\r\n\r\nconst Visualize = () => (\r\n  <Container fluid className=\"main-content-container px-4\">\r\n    <GraphConfiguration/>\r\n  </Container>\r\n);\r\n\r\nexport default Visualize;\r\n","import React, { Component } from \"react\";\r\nimport GoogleAnalytics from \"react-ga\";\r\n\r\nGoogleAnalytics.initialize(process.env.REACT_APP_GAID || \"UA-115105611-X\");\r\n\r\nconst withTracker = (WrappedComponent, options = {}) => {\r\n  const trackPage = page => {\r\n    if (process.env.NODE_ENV !== \"production\" || true) {\r\n      return;\r\n    }\r\n\r\n    GoogleAnalytics.set({\r\n      page,\r\n      ...options\r\n    });\r\n    GoogleAnalytics.pageview(page);\r\n  };\r\n\r\n  const BASENAME = process.env.REACT_APP_BASENAME || \"\";\r\n\r\n  // eslint-disable-next-line\r\n  const HOC = class extends Component {\r\n    componentDidMount() {\r\n      // eslint-disable-next-line\r\n      const page = this.props.location.pathname + this.props.location.search;\r\n      trackPage(`${BASENAME}${page}`);\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n      const currentPage =\r\n        prevProps.location.pathname + prevProps.location.search;\r\n      const nextPage =\r\n        this.props.location.pathname + this.props.location.search;\r\n\r\n      if (currentPage !== nextPage) {\r\n        trackPage(`${BASENAME}${nextPage}`);\r\n      }\r\n    }\r\n\r\n    render() {\r\n      return <WrappedComponent {...this.props} />;\r\n    }\r\n  };\r\n\r\n  return HOC;\r\n};\r\n\r\nexport default withTracker;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\n\r\nimport routes from \"./routes\";\r\nimport withTracker from \"./withTracker\";\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./shards-dashboard/styles/shards-dashboards.1.1.0.min.css\";\r\n\r\nexport default () => (\r\n  <Router basename={process.env.REACT_APP_BASENAME || \"\"}>\r\n    <div>\r\n      {routes.map((route, index) => {\r\n        return (\r\n          <Route\r\n            key={index}\r\n            path={route.path}\r\n            exact={route.exact}\r\n            component={withTracker(props => {\r\n              return (\r\n                <route.layout {...props}>\r\n                  <route.component {...props} />\r\n                </route.layout>\r\n              );\r\n            })}\r\n          />\r\n        );\r\n      })}\r\n    </div>\r\n  </Router>\r\n);\r\n","module.exports = __webpack_public_path__ + \"static/media/0.73476783.jpg\";"],"sourceRoot":""}